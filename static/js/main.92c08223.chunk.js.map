{"version":3,"sources":["Components/Main/Converter/LeftSelect/Select.module.css","Components/Main/Course/CourseItems/CourseItem/CourseItem.module.css","Components/Header/Header.module.css","Components/Main/Course/Course.module.css","Components/Main/Converter/Input/Input.module.css","Components/Main/Statistic/Statistic.module.css","Components/Main/Course/CourseMenu/Date/Date.module.css","Components/Main/Statistic/Graph/GraphItem/GraphItem.module.css","Components/Main/Course/CourseMenu/CourseMenu.module.css","Components/Main/Converter/Converter.module.css","Components/Main/Course/CourseItems/CourseItems.module.css","Components/Main/Converter/Modal/Modal.module.css","Components/Main/Main.module.css","Components/Main/Statistic/Currency/Currency.module.css","Components/common/Base/Base.module.css","Components/Main/Statistic/Graph/Graph.module.css","Components/common/Preloader/Preloader.module.css","assets/oval.svg","Components/Main/Statistic/Period/Period.module.css","Components/Main/Home/Home.module.css","Components/Main/Converter/Modal/ModalItem/ModalItem.module.css","Components/Header/Header.jsx","Components/Main/Statistic/Currency/Currency.jsx","DAL/date.js","DAL/api.js","Redux/course-reducer.js","Redux/statistic-reducer.js","Components/Main/Statistic/Currency/CurrencyContainer.jsx","Components/common/Base/Base.jsx","Components/Main/Statistic/Base/BaseContainer.jsx","Components/Main/Statistic/Graph/GraphItem/GraphItem.jsx","Components/common/Preloader/Preloader.jsx","Components/Main/Statistic/Graph/Graph.jsx","Components/Main/Statistic/Graph/GraphContainer.jsx","Components/Main/Statistic/Period/Period.jsx","Components/Main/Statistic/Period/PeriodContainer.jsx","Components/Main/Statistic/Statistic.jsx","Components/Main/Course/CourseMenu/Date/Date.jsx","Components/Main/Course/CourseMenu/Date/DateContainer.jsx","Components/Main/Course/CourseMenu/Base/BaseContainer.jsx","Components/Main/Course/CourseMenu/CourseMenu.jsx","Components/Main/Course/CourseItems/CourseItem/CourseItem.jsx","Components/Main/Course/CourseItems/CourseItems.jsx","Components/Main/Course/CourseItems/CourseItemsContainer.jsx","Components/Main/Course/Course.jsx","Components/Main/Home/Home.jsx","Redux/converter-reducer.js","Components/Main/Converter/Input/LeftInput.jsx","Components/Main/Converter/Modal/ModalItem/ModalItem.jsx","Components/Main/Converter/Modal/Modal.jsx","Components/Main/Converter/Input/RightInput.jsx","Components/Main/Converter/LeftSelect/SelectItem/SelectItem.jsx","Components/Main/Converter/LeftSelect/LeftSelect.jsx","Components/Main/Converter/LeftSelect/RightSelect.jsx","Components/Main/Converter/Converter.jsx","Components/Main/Converter/ConverterContainer.jsx","Components/Main/Main.jsx","App.jsx","Redux/redux-store.js","index.jsx"],"names":["module","exports","Header","className","style","header","headerLogo","nav","to","item","activeClassName","active","Currency","props","optionElements","baseName","map","index","key","value","currency","onChange","event","target","setNewCurrency","DATE","dateTranslate","date","monthWord","year","match","month","day","dateToJS","Date","dateToStr","getFullYear","getMonth","getDate","getDateNew","change","dateNewJS","dateJS","this","getTime","getStartPeriodDate","period","startPeriodDateJS","instance","axios","baseURL","courseAPI","base","get","then","responce","data","statisticAPI","dateStart","dateEnd","converterAPI","leftCurrency","rightCurrency","initialState","rates","ratesBefore","dateNow","dateBefore","isloading","setNewBase","type","setRates","setRatesBefore","setDate","toggleLoading","isLoading","courseReducer","state","action","dateNew","dateBeforeNew","ratesArr","push","designationOfCurrency","rateOfCurrency","toFixed","nameForCode","code","find","el","sort","a0","b0","a","b","ratesForPeriod","startPeriodDate","setRatesForPeriod","getRatesForPeriod","dispatch","statisticReducer","rate","k","ratesArrValid","dateCurr","i","CurrencyContainer","connect","course","statistic","Base","courseMenuBase","BaseContainerAJAX","React","Component","BaseContainer","GraphItem","styleItem","rateStyle","Preloader","preloader","src","alt","Graph","filter","rateMax","Math","max","apply","rateMin","min","items","dateGraph","width","colorRed","colorGreen","backgroundColor","floor","color","graph","GraphContainerAJAX","getRatesInitial","prevProps","GraphContainer","Period","setNewPeriod","PeriodContainer","Statistic","courseMenuDate","arrow","onClick","changeDate","DateContainer","CourseMenu","courseMenu","CourseItem","styleColor","styleIcon","iconStyle","changeStyle","green","red","display","justifyContent","courseItems","nameOfCurrency","icon","number","CourseItems","CourseItemElements","length","rateOfCurrencyBefore","noData","CourseItemsContainerAJAX","setAfterMount","setAfterUpdate","CourseItemsContainer","Promise","all","results","Course","courseHeader","courseHeaderName","courseHeaderCode","courseHeaderRate","Home","home","leftCurrencyAdd","leftModalIsActive","rightCurrencyAdd","rightModalIsActive","inputLeft","inputRight","inputSymbolLeft","inputSymbolRight","setLeftCurrency","toggleLeftModal","setRightCurrency","toggleRightModal","setRate","setRightInput","converterReducer","newValue","indexOf","slice","inputRightNew","inputLeftNew","symbol","LeftInputContainer","converter","leftInputChange","leftInputAddSymbol","label","input","e","currentTarget","onKeyPress","ModalItem","data-code","dataset","setLeftCurrencyAdd","setRightCurrencyAdd","name","ModalContainer","modalItems","wrapper","modal","RightInputContainer","rightInputChange","rightInputAddSymbol","SelectItem","innerText","setCurrency","text","LeftSelectContainer","leftCurr","style1","selected","style2","style3","style4","style5","modalActivator","select","title","RightSelectContainer","rightCurr","Converter","ConverterAJAX","getRate","ConverterContainer","Main","main","exact","path","render","App","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.92c08223.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Select_title__VaKcn\",\"select\":\"Select_select__35e3l\",\"item\":\"Select_item__TTpFz\",\"selected\":\"Select_selected__1QQvU\",\"modalActivator\":\"Select_modalActivator__-IBug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseItems\":\"CourseItem_courseItems__1SN6a\",\"nameOfCurrency\":\"CourseItem_nameOfCurrency__32CWr\",\"designationOfCurrency\":\"CourseItem_designationOfCurrency__2oIWM\",\"rateOfCurrency\":\"CourseItem_rateOfCurrency__7ETec\",\"change\":\"CourseItem_change__ggenQ\",\"green\":\"CourseItem_green__MC0z9\",\"red\":\"CourseItem_red__2itN8\",\"icon\":\"CourseItem_icon__6zEvi\",\"number\":\"CourseItem_number__9JwfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ez_C\",\"headerLogo\":\"Header_headerLogo__1Ev0u\",\"nav\":\"Header_nav__3VJy_\",\"item\":\"Header_item__1vX5z\",\"active\":\"Header_active__GU8Ux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"course\":\"Course_course__TErUt\",\"courseHeader\":\"Course_courseHeader__2oVIO\",\"courseHeaderName\":\"Course_courseHeaderName__1nor4\",\"courseHeaderCode\":\"Course_courseHeaderCode__2o4sd\",\"courseHeaderRate\":\"Course_courseHeaderRate__Psz9v\",\"change\":\"Course_change__3uFCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1nmKB\",\"label\":\"Input_label__2-wb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistic_statistic__1ToLh\",\"currency\":\"Statistic_currency__-OMJG\",\"period\":\"Statistic_period__36Nhe\",\"graph\":\"Statistic_graph__3I7qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseMenuDate\":\"Date_courseMenuDate__29AQt\",\"date\":\"Date_date__16TRZ\",\"arrow\":\"Date_arrow__1guf2\",\"disable\":\"Date_disable__3T6c3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"GraphItem_item__TDRII\",\"rate\":\"GraphItem_rate__3kmJt\",\"date\":\"GraphItem_date__NWbvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseMenu\":\"CourseMenu_courseMenu__3Ftt_\",\"courseMenuBase\":\"CourseMenu_courseMenuBase__1Bp3H\",\"courseMenuDate\":\"CourseMenu_courseMenuDate__2bby8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"converter\":\"Converter_converter__msN0A\",\"select\":\"Converter_select__1Kx4d\",\"input\":\"Converter_input__1_g55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseItems\":\"CourseItems_courseItems__1p-Ja\",\"noData\":\"CourseItems_noData__2o9Te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Modal_wrapper__3hzvH\",\"modal\":\"Modal_modal__2U9By\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3Dbnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currency\":\"Currency_currency__1OTG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseMenuBase\":\"Base_courseMenuBase__3j4Gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"Graph_graph__21cTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__25AOS\"};","module.exports = __webpack_public_path__ + \"static/media/oval.be00fc4a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"period\":\"Period_period__1m6fR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__2SW2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ModalItem_item__eklI0\"};","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.headerLogo}>\r\n                Курсы валют\r\n            </div>\r\n            <nav className={style.nav}>\r\n                {/*<NavLink exact to='/' className={style.item} activeClassName={style.active}>Курсы</NavLink>*/}\r\n                <NavLink to='/' className={style.item}>Домой</NavLink>\r\n                <NavLink to='/course' className={style.item} activeClassName={style.active}>Курсы</NavLink>\r\n                <NavLink to='/statistic' className={style.item} activeClassName={style.active}>Статистика</NavLink>\r\n                <NavLink to='/converter' className={style.item} activeClassName={style.active}>Конвертер</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from './Currency.module.css';\r\n\r\nconst Currency = (props) => {\r\n\r\n    let onCurrencyChange = (event) => {\r\n        let currency = event.target.value;\r\n        props.setNewCurrency(currency);\r\n    };\r\n\r\n    let optionElements = props.baseName.map(\r\n        (item, index) => <option key={index} value={item[0]}>{`${item[0]} - ${item[1]}`}</option>\r\n    );\r\n\r\n    return (\r\n        <div className={style.currency}>\r\n            <select onChange={onCurrencyChange} value={props.currency}>\r\n                {optionElements}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Currency;","//объект с методами получения и изменения дат\r\nexport const DATE = {\r\n    // перевод даты из формата REST-API 'YYYY-MM-DD' в формат вывода 'DAY MONTH YEAR'\r\n    dateTranslate(date) {\r\n        let year = date.match(/\\d+/g)[0];\r\n        let month = date.match(/\\d+/g)[1];\r\n        let day = date.match(/\\d+/g)[2];\r\n        let monthWord;\r\n        switch (+month) {\r\n            case 1: {\r\n                monthWord = 'января';\r\n                break;\r\n            }\r\n            case 2: {\r\n                monthWord = 'февраля';\r\n                break;\r\n            }\r\n            case 3: {\r\n                monthWord = 'марта';\r\n                break;\r\n            }\r\n            case 4: {\r\n                monthWord = 'апреля';\r\n                break;\r\n            }\r\n            case 5: {\r\n                monthWord = 'мая';\r\n                break;\r\n            }\r\n            case 6: {\r\n                monthWord = 'июня';\r\n                break;\r\n            }\r\n            case 7: {\r\n                monthWord = 'июля';\r\n                break;\r\n            }\r\n            case 8: {\r\n                monthWord = 'августа';\r\n                break;\r\n            }\r\n            case 9: {\r\n                monthWord = 'сентября';\r\n                break;\r\n            }\r\n            case 10: {\r\n                monthWord = 'октября';\r\n                break;\r\n            }\r\n            case 11: {\r\n                monthWord = 'ноября';\r\n                break;\r\n            }\r\n            case 12: {\r\n                monthWord = 'декабря';\r\n                break;\r\n            }\r\n        }\r\n        return `${day} ${monthWord} ${year}`;\r\n    },\r\n\r\n    // перевод даты из формата 'YYYY-MM-DD' в объект JS Date()\r\n    dateToJS(date) {\r\n        let year = date.match(/\\d+/g)[0];\r\n        let month = date.match(/\\d+/g)[1] - 1;\r\n        let day = date.match(/\\d+/g)[2];\r\n        return new Date(year, month, day);\r\n    },\r\n\r\n    // перевод даты из формата объекта JS Date() в 'YYYY-MM-DD'\r\n    dateToStr(date) {\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth() + 1;\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n        let day = date.getDate();\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n        return `${year}-${month}-${day}`;\r\n    },\r\n\r\n    // получение следующей/предыдущей даты\r\n    getDateNew(change, date) {\r\n        // change = 'plus', 'minus'\r\n        // date, return = 'YYYY-MM-DD'\r\n        // перевод даты из формата 'YYYY-MM-DD' в объект Date JS\r\n        let dateJS = this.dateToJS(date);\r\n        // получение предыдущей/следующей даты\r\n        let dateNewJS;\r\n        if (change === 'minus') {\r\n            dateNewJS = new Date(dateJS.getTime() - 24 * 60 * 60 * 1000);\r\n        } else if (change === 'plus') {\r\n            dateNewJS = new Date(dateJS.getTime() + 24 * 60 * 60 * 1000);\r\n        }\r\n        // перевод предыдущей/следующей даты из объекта Date в формат state\r\n        return this.dateToStr(dateNewJS);\r\n    },\r\n\r\n    // получение даты начала периода\r\n    getStartPeriodDate(date, period) {\r\n        // date = 'YYYY-MM-DD'\r\n        // period = 3, 7, 14, 30\r\n        let dateJS = this.dateToJS(date);\r\n        let startPeriodDateJS = new Date(dateJS.getTime() - period * 24 * 60 * 60 * 1000);\r\n        return this.dateToStr(startPeriodDateJS);\r\n    }\r\n}","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.exchangeratesapi.io/'\r\n});\r\n\r\nexport const courseAPI = {\r\n    // получаем курсы по установленной базе за последнее число\r\n    getLatest(base) {\r\n        return instance.get(`latest?base=${base}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    // получить курсы за заданную дату по заданной базе\r\n    getByDate(date, base) {\r\n        return instance.get(`history?start_at=${date}&end_at=${date}&base=${base}`)\r\n            .then(responce => responce.data)\r\n    }\r\n};\r\n\r\nexport const statisticAPI = {\r\n    // запрос без параметров, получаем только дату\r\n    getInitial() {\r\n        return instance.get(`latest`)\r\n            .then(responce => responce.data)\r\n    },\r\n    // получить курсы за период по заданной базе и валюте\r\n    // валюту и базу в запросе надо поменять местами, т.к. в api перерасчет не к базе, а от базы\r\n    getByPeriod(dateStart, dateEnd, currency, base) {\r\n        return instance.get(`history?start_at=${dateStart}&end_at=${dateEnd}&symbols=${base}&base=${currency}`)\r\n            .then(responce => responce.data)\r\n    }\r\n};\r\n\r\nexport const converterAPI = {\r\n    getRate(leftCurrency, rightCurrency){\r\n        return instance.get(`latest?base=${rightCurrency}&symbols=${leftCurrency}`)\r\n            // latest?base=${rightCurrency}&symbols=${leftCurrency}\r\n            .then(responce => responce.data)\r\n    }\r\n}","import {DATE as date, DATE} from \"../DAL/date\";\r\nimport {courseAPI, statisticAPI} from \"../DAL/api\";\r\nconst SET_NEW_BASE = 'SET-NEW-BASE';\r\nconst SET_NEW_RATES = 'SET-NEW-RATES';\r\nconst SET_NEW_RATES_BEFORE = 'SET-NEW-RATES-BEFORE';\r\nconst SET_DATE = 'SET-DATE';\r\nconst CHANGE_DATE = 'CHANGE_DATE';\r\nconst TOGGLE_LOADING = 'TOGGLE-LOADING';\r\n\r\n\r\nlet initialState = {\r\n    baseName: [\r\n        ['AUD', 'Австралийский доллар'],\r\n        ['BGN', 'Болгарский лев'],\r\n        ['BRL', 'Бразильский реал'],\r\n        ['GBP', 'Британский фунт стерлингов'],\r\n        ['HUF', 'Венгерский форинт'],\r\n        ['HKD', 'Гонконгский доллар'],\r\n        ['DKK', 'Датская крона'],\r\n        ['USD', 'Доллар США'],\r\n        ['EUR', 'Евро'],\r\n        ['INR', 'Индийская рупия'],\r\n        ['IDR', 'Индонезийская рупия'],\r\n        ['ISK', 'Исландская крона'],\r\n        ['CAD', 'Канадский доллар'],\r\n        ['MYR', 'Малайский ринггит'],\r\n        ['MXN', 'Мексиканское песо'],\r\n        ['TRY', 'Новая турецкая лира'],\r\n        ['NZD', 'Новозеландский доллар'],\r\n        ['ILS', 'Новый израильский шекель'],\r\n        ['NOK', 'Норвежская крона'],\r\n        ['PLN', 'Польский злотый'],\r\n        ['RUB', 'Российский рубль'],\r\n        ['RON', 'Румынский лей'],\r\n        ['ZAR', 'Рэнд'],\r\n        ['SGD', 'Сингапурский доллар'],\r\n        ['THB', 'Тайский бат'],\r\n        ['PHP', 'Филиппинское песо'],\r\n        ['HRK', 'Хорватская куна'],\r\n        ['CZK', 'Чешская крона'],\r\n        ['SEK', 'Шведская крона'],\r\n        ['CHF', 'Швейцарский франк'],\r\n        ['CNY', 'Юань'],\r\n        ['KRW', 'Южнокорейская вона'],\r\n        ['JPY', 'Японская иена']\r\n    ],\r\n    rates: [],\r\n    ratesBefore: [],\r\n    base: 'RUB',\r\n    dateNow: '2010-06-06', // дата на данный момент времени\r\n    date: '2010-06-06',     // изменяемая дата\r\n    dateBefore: '2010-06-06',\r\n    isloading: false,\r\n    //currency: 'EUR',// выбранная валюта для статистики\r\n    //ratesForPeriod: [], // массив курсов за период\r\n    //period: 14, // период\r\n    //startPeriodDate: '' // начальная дата периода\r\n};\r\n\r\n\r\nconst courseReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_NEW_BASE: {\r\n            return {\r\n                ...state,\r\n                base: action.base\r\n            }\r\n        }\r\n\r\n        case SET_DATE: {// первоначальная установка текущей даты и даты на данный момент времени и предыдущей дата\r\n            return {\r\n                ...state,\r\n                dateNow: action.date,\r\n                date: action.date,\r\n                dateBefore: DATE.getDateNew('minus', action.date),\r\n            }\r\n        }\r\n\r\n        case CHANGE_DATE: {\r\n            let dateNew = DATE.getDateNew(action.change, state.date);\r\n            let dateBeforeNew = DATE.getDateNew('minus', dateNew);\r\n            return {\r\n                ...state,\r\n                date: dateNew,\r\n                dateBefore: dateBeforeNew\r\n            }\r\n        }\r\n\r\n        case SET_NEW_RATES: {\r\n            let ratesArr = [];\r\n            for (let key in action.rates) {\r\n                ratesArr.push({\r\n                    designationOfCurrency: key,\r\n                    rateOfCurrency: (1 / (+action.rates[key])).toFixed(6)\r\n                });\r\n            }\r\n\r\n            // если base = EUR, добавить строку (API не добавляет)\r\n            if (state.base === 'EUR') {\r\n                ratesArr.push({\r\n                    designationOfCurrency: 'EUR',\r\n                    rateOfCurrency: '1.0000'\r\n                });\r\n            }\r\n\r\n            // получить из кода название\r\n            let nameForCode = (code) => state.baseName.find(el => el[0] === code)[1];\r\n\r\n            // сортировка по названию валюты\r\n            ratesArr.sort(function (a0, b0) {\r\n                let a = nameForCode(a0.designationOfCurrency);\r\n                let b = nameForCode(b0.designationOfCurrency);\r\n\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                rates: ratesArr\r\n            }\r\n\r\n        }\r\n\r\n        case SET_NEW_RATES_BEFORE: {\r\n            let ratesArr = [];\r\n            for (let key in action.ratesBefore) {\r\n                ratesArr.push({\r\n                    designationOfCurrency: key,\r\n                    rateOfCurrency: (1 / (+action.ratesBefore[key])).toFixed(6)\r\n                });\r\n            }\r\n\r\n            // если base = EUR, добавить строку (API не добавляет)\r\n            if (state.base === 'EUR') {\r\n                ratesArr.push({\r\n                    designationOfCurrency: 'EUR',\r\n                    rateOfCurrency: '1'\r\n                });\r\n            }\r\n\r\n            // получить из кода название\r\n            let nameForCode = (code) => state.baseName.find(el => el[0] === code)[1];\r\n\r\n            // сортировка по названию валюты\r\n            ratesArr.sort(function (a0, b0) {\r\n                let a = nameForCode(a0.designationOfCurrency);\r\n                let b = nameForCode(b0.designationOfCurrency);\r\n\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ratesBefore: ratesArr\r\n            }\r\n        }\r\n\r\n        case TOGGLE_LOADING: {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setNewBase = base => ({type: SET_NEW_BASE, base});\r\nexport const setRates = rates => ({type: SET_NEW_RATES, rates});\r\nexport const setRatesBefore = ratesBefore => ({type: SET_NEW_RATES_BEFORE, ratesBefore});\r\nexport const setDate = date => ({type: SET_DATE, date});\r\nexport const changeDate = change => ({type: CHANGE_DATE, change});\r\nexport const toggleLoading = isLoading => ({type: TOGGLE_LOADING, isLoading});\r\n\r\nexport const setAfterMount = (base) => dispatch => {\r\n    dispatch(toggleLoading(true));\r\n    let dateBefore;\r\n    courseAPI.getLatest(base)\r\n        .then(data => {\r\n            dateBefore = date.getDateNew('minus', data.date);\r\n            dispatch(setRates(data.rates));\r\n            dispatch(setDate(data.date));\r\n            return courseAPI.getByDate(dateBefore, base)\r\n        })\r\n        .then(data => {\r\n            dispatch(setRatesBefore(data.rates[dateBefore]));\r\n            dispatch(toggleLoading(false));\r\n        })\r\n};\r\n\r\nexport const setAfterUpdate = (date, dateBefore, base) => dispatch => {\r\n\r\n    dispatch(toggleLoading(true));\r\n    let getRates = () => courseAPI.getByDate(date, base);\r\n    let getRatesBefore = () => courseAPI.getByDate(dateBefore, base);\r\n    Promise.all([getRates(), getRatesBefore()])\r\n        .then(results => {\r\n            dispatch(setRates(results[0].rates[date]));\r\n            dispatch(setRatesBefore(results[1].rates[dateBefore]));\r\n            dispatch(toggleLoading(false));\r\n        });\r\n};\r\n\r\nexport default courseReducer;\r\n\r\n","import {DATE as date, DATE} from \"../DAL/date\";\r\nimport {statisticAPI} from \"../DAL/api\";\r\nimport {toggleLoading} from \"./course-reducer\";\r\n\r\nconst SET_DATE = 'SET-DATE';\r\nconst SET_NEW_CURRENCY = 'SET-NEW-CURRENCY';\r\nconst SET_NEW_PERIOD = 'SET-NEW-PERIOD';\r\nconst SET_RATES_FOR_PERIOD = 'SET-RATES-FOR-PERIOD';\r\n\r\nlet initialState = {\r\n    dateNow: '',\r\n    currency: 'EUR',// выбранная валюта для статистики\r\n    ratesForPeriod: [], // массив курсов за период\r\n    period: 14, // период\r\n    startPeriodDate: '' // начальная дата периода\r\n};\r\n\r\nconst statisticReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_DATE: {// первоначальная установка текущей даты и даты на данный момент времени и предыдущей дата\r\n            return {\r\n                ...state,\r\n                dateNow: action.date,\r\n                startPeriodDate: DATE.getStartPeriodDate(action.date, state.period)\r\n            }\r\n        }\r\n\r\n        case SET_NEW_CURRENCY: {\r\n            return {\r\n                ...state,\r\n                currency: action.currency\r\n            }\r\n        }\r\n\r\n        case SET_NEW_PERIOD: {\r\n            // определение новой startPeriodDate\r\n            return {\r\n                ...state,\r\n                period: action.period,\r\n                startPeriodDate: DATE.getStartPeriodDate(state.dateNow, action.period)\r\n            }\r\n        }\r\n\r\n        case SET_RATES_FOR_PERIOD: {\r\n            let ratesArr = [];\r\n            for (let key in action.rates) {\r\n                let rate;\r\n                for (let k in action.rates[key]) {\r\n                    rate = action.rates[key][k].toFixed(6);//\r\n                }\r\n                ratesArr.push([key, rate]);\r\n            }\r\n            // валидация на пропушенные дни\r\n            let ratesArrValid = [];\r\n            let dateCurr = state.startPeriodDate;\r\n            for (let i = 0; i < state.period; i++) {\r\n                // поиск в массиве ratesArr элемента el такого, что el[0]=dateCurr\r\n                // если он есть добавляем в его ratesArrValid\r\n                // если его нет добавляем пустую строку\r\n                let el = ratesArr.find(el => el[0] === dateCurr);\r\n                if (el) {\r\n                    ratesArrValid.push(el)\r\n                } else {\r\n                    ratesArrValid.push([dateCurr, null])\r\n                }\r\n                dateCurr = date.getDateNew('plus', dateCurr);\r\n            }\r\n\r\n            return {...state, ratesForPeriod: ratesArrValid}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setDate = date => ({type: SET_DATE, date});\r\nexport const setNewCurrency = currency => ({type: SET_NEW_CURRENCY, currency});\r\nexport const setNewPeriod = period => ({type: SET_NEW_PERIOD, period});\r\nexport const setRatesForPeriod = rates => ({type: SET_RATES_FOR_PERIOD, rates});\r\n\r\nexport const getRatesInitial = (period, currency, base) => dispatch => {\r\n    dispatch(toggleLoading(true));\r\n    statisticAPI.getInitial()\r\n        .then(data => {\r\n            dispatch(setDate(data.date));\r\n            return statisticAPI.getByPeriod(DATE.getStartPeriodDate(data.date, period), data.date, currency, base);\r\n        })\r\n        .then(data => {\r\n            dispatch(setRatesForPeriod(data.rates));\r\n            dispatch(toggleLoading(false));\r\n        });\r\n};\r\n\r\nexport const getRatesForPeriod = (startPeriodDate, dateNow, currency, base) => dispatch => {\r\n    dispatch(toggleLoading(true));\r\n    statisticAPI.getByPeriod(startPeriodDate, dateNow, currency, base)\r\n        .then(data => {\r\n            dispatch(setRatesForPeriod(data.rates));\r\n            dispatch(toggleLoading(false));\r\n        });\r\n};\r\n\r\nexport default statisticReducer;\r\n\r\n","import {connect} from \"react-redux\";\r\nimport Currency from \"./Currency\";\r\nimport {setNewCurrency} from \"../../../../Redux/statistic-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseName: state.course.baseName,\r\n        currency: state.statistic.currency\r\n    }\r\n};\r\n\r\nconst CurrencyContainer = connect(mapStateToProps,\r\n    {setNewCurrency})(Currency);\r\n\r\nexport default CurrencyContainer;","import React from 'react';\r\nimport style from './Base.module.css';\r\n\r\nconst Base = (props) => {\r\n    let onBaseChange = (event) => {\r\n        props.setNewBase(event.target.value);\r\n    };\r\n\r\n    let optionElements = props.baseName.map(\r\n        (item, index) => <option key={index} value={item[0]}>{`${item[0]} - ${item[1]}`}</option>\r\n    );\r\n\r\n    return (\r\n        <div className={style.courseMenuBase}>\r\n            <select onChange={onBaseChange} value={props.base}>\r\n                {optionElements}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Base;","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {API} from \"../../../../DAL/api\";\r\nimport {\r\n    setNewBase,\r\n    toggleLoading\r\n} from \"../../../../Redux/course-reducer\";\r\nimport {DATE} from \"../../../../DAL/date\";\r\nimport Base from \"../../../common/Base/Base\";\r\nimport {getRatesForPeriod, setDate} from \"../../../../Redux/statistic-reducer\";\r\n\r\nclass BaseContainerAJAX extends React.Component {\r\n    // componentDidMount() {\r\n    //     // получение из запроса - даты на данный момент\r\n    //     this.props.toggleLoading(true);\r\n    //     API.getInitial()\r\n    //         .then(data => {\r\n    //             this.props.toggleLoading(false);\r\n    //             this.props.setDate(data.date);\r\n    //             this.props.getRatesForPeriod(DATE.getStartPeriodDate(data.date, this.props.period), data.date, this.props.currency, this.props.base);\r\n    //             this.props.toggleLoading(false);\r\n    //         })\r\n    //\r\n    // }\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     console.log(this.props)\r\n    //     if (prevProps.startPeriodDate !== this.props.startPeriodDate\r\n    //         || prevProps.dateNow !== this.props.dateNow\r\n    //         || prevProps.currency !== this.props.currency\r\n    //         || prevProps.base !== this.props.base) {\r\n    //         this.props.getRatesForPeriod(this.props.startPeriodDate, this.props.dateNow, this.props.currency, this.props.base);\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return <Base\r\n            setNewBase={this.props.setNewBase}\r\n            baseName={this.props.baseName}\r\n            base={this.props.base}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseName: state.course.baseName,\r\n        base: state.course.base,\r\n        period: state.statistic.period,\r\n        currency: state.statistic.currency,\r\n        startPeriodDate: state.statistic.startPeriodDate,\r\n        dateNow: state.statistic.dateNow\r\n    }\r\n};\r\n\r\nconst BaseContainer = connect(mapStateToProps,\r\n    {setNewBase, toggleLoading, setDate, getRatesForPeriod})(BaseContainerAJAX);\r\n\r\nexport default BaseContainer;","import React from 'react';\r\nimport style from './GraphItem.module.css'\r\n\r\nconst GraphItem = (props) => {\r\n    return (\r\n        <div className={style.item} style={props.styleItem}>\r\n            <div className={style.rate} style={props.rateStyle}>{props.rate}</div>\r\n            <div className={style.date}>{props.date}</div>\r\n        </div>\r\n        )\r\n};\r\n\r\nexport default GraphItem;\r\n","import React from 'react';\r\nimport style from './Preloader.module.css';\r\nimport preloader from '../../../assets/oval.svg'\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <img src={preloader} alt=\"\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;\r\n\r\n","import React from 'react';\r\nimport style from './Graph.module.css'\r\nimport GraphItem from \"./GraphItem/GraphItem\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\n\r\nconst Graph = (props) => {\r\n    let rates = props.rates.map(el => el[1]).filter(el => el);\r\n    let rateMax = Math.max.apply(null, rates);\r\n    let rateMin = Math.min.apply(null, rates);\r\n\r\n    let items = props.rates.map((el) => {\r\n        let rate, dateGraph, width, colorRed, colorGreen, backgroundColor, rateStyle;\r\n\r\n        let month = el[0].match(/\\d+/g)[1];\r\n        let day = el[0].match(/\\d+/g)[2];\r\n        dateGraph = `${day}.${month}`;\r\n\r\n        if (el[1]) {\r\n\r\n            if(rateMax !==rateMin){\r\n                width = Math.floor(100 * (50 + 250 * (el[1] - rateMin) / (rateMax - rateMin)) / 300) + '%';\r\n                colorRed = Math.floor(255 * (el[1] - rateMin) / (rateMax - rateMin));\r\n                colorGreen = Math.floor(255 * (rateMax - el[1]) / (rateMax - rateMin));\r\n                rate = el[1];\r\n                backgroundColor = `rgb(${colorRed},${colorGreen},0`;\r\n                if (+el[1] === rateMax) {\r\n                    rate = `${el[1]} = maximum`;\r\n                    rateStyle = {color: 'darkred'}\r\n                }\r\n                if (+el[1] === rateMin) {\r\n                    rate = `${el[1]} = minimum`;\r\n                    rateStyle = {color: 'darkgreen'}\r\n                }\r\n            } else {\r\n                colorRed = 254/2;\r\n                colorGreen = 254/2;\r\n                width='100%';\r\n                rate = el[1];\r\n                backgroundColor = `#aaa`;\r\n            }\r\n\r\n        } else {\r\n            width = 0;\r\n            rate = 'нет данных';\r\n        }\r\n        let style = {\r\n            width: width,\r\n            backgroundColor: backgroundColor\r\n        };\r\n        return (<GraphItem\r\n            styleItem={style}\r\n            rate={rate}\r\n            date={dateGraph}\r\n            rateStyle={rateStyle}\r\n            //key={el[0]}\r\n        />)\r\n    });\r\n\r\n    return (\r\n        <div className={style.graph}>\r\n            {props.isLoading ? <Preloader/> : null}\r\n            {items}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Graph;\r\n","import Graph from \"./Graph\";\r\nimport {connect} from \"react-redux\";\r\nimport React from 'react';\r\nimport {statisticAPI} from \"../../../../DAL/api\";\r\nimport {DATE} from \"../../../../DAL/date\";\r\nimport {toggleLoading} from \"../../../../Redux/course-reducer\";\r\nimport {getDateInitial, getRatesForPeriod, getRatesInitial, setDate} from \"../../../../Redux/statistic-reducer\";\r\n\r\nclass GraphContainerAJAX extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getRatesInitial(this.props.period, this.props.currency, this.props.base);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.startPeriodDate !== this.props.startPeriodDate\r\n            || prevProps.dateNow !== this.props.dateNow\r\n            || prevProps.currency !== this.props.currency\r\n            || prevProps.base !== this.props.base) {\r\n            this.props.getRatesForPeriod(this.props.startPeriodDate, this.props.dateNow, this.props.currency, this.props.base);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Graph rates={this.props.rates}\r\n                   isLoading={this.props.isLoading}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        rates: state.statistic.ratesForPeriod,\r\n        isLoading: state.course.isLoading,\r\n        baseName: state.course.baseName,\r\n        base: state.course.base,\r\n        period: state.statistic.period,\r\n        currency: state.statistic.currency,\r\n        startPeriodDate: state.statistic.startPeriodDate,\r\n        dateNow: state.statistic.dateNow\r\n    }\r\n};\r\n\r\nconst GraphContainer = connect(mapStateToProps,\r\n    {toggleLoading, setDate, getRatesForPeriod, getRatesInitial})(GraphContainerAJAX);\r\n\r\nexport default GraphContainer;\r\n\r\n","import React from 'react';\r\nimport style from './Period.module.css';\r\n\r\nconst Period = (props) => {\r\n    let onPeriodChange = (event) => {\r\n        let period = event.target.value;\r\n        props.setNewPeriod(period);\r\n    };\r\n    return (\r\n        <div className={style.period}>\r\n            <select onChange={onPeriodChange} value={props.period}>\r\n                <option value={3}>3 дня</option>\r\n                <option value={7}>7 дней</option>\r\n                <option value={14}>14 дней</option>\r\n                <option value={30}>30 дней</option>\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Period;","import {connect} from \"react-redux\";\r\nimport {} from \"../../../../Redux/course-reducer\";\r\nimport Period from \"./Period\";\r\nimport {setNewPeriod, setRatesForPeriod} from \"../../../../Redux/statistic-reducer\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        period: state.statistic.period,\r\n        startPeriodDate: state.statistic.startPeriodDate,\r\n        dateNow: state.course.dateNow,\r\n        currency: state.statistic.currency,\r\n        base: state.course.base\r\n    }\r\n};\r\n\r\nconst PeriodContainer = connect(mapStateToProps,\r\n    {setNewPeriod})(Period);\r\n\r\nexport default PeriodContainer;","import React from 'react';\r\nimport style from './Statistic.module.css'\r\nimport CurrencyContainer from \"./Currency/CurrencyContainer\";\r\nimport BaseContainer from \"./Base/BaseContainer\";\r\nimport GraphContainer from \"./Graph/GraphContainer\";\r\nimport PeriodContainer from \"./Period/PeriodContainer\";\r\n\r\nconst Statistic = () => {\r\n    return (\r\n        <div className={style.statistic}>\r\n            <div className={style.currency}>\r\n                <div>Курс </div>\r\n                <CurrencyContainer/>\r\n                <div>за </div>\r\n                <BaseContainer/>\r\n            </div>\r\n            <div className={style.period}>\r\n                <div>период за</div>\r\n                <PeriodContainer/>\r\n            </div>\r\n            <div className={style.graph}>\r\n                <GraphContainer/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Statistic;","import React from 'react';\r\nimport style from './Date.module.css';\r\n\r\nconst Date = (props) => {\r\n\r\n    let onLeftArrowClick = () => {\r\n        props.changeDate('minus');\r\n    };\r\n\r\n    let onRightArrowClick = () => {\r\n        if (props.date !== props.dateNow) {\r\n            props.changeDate('plus')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.courseMenuDate}>\r\n            <div className={style.arrow} onClick={onLeftArrowClick}>{'<'}</div>\r\n            <div className={style.date}>{props.date}</div>\r\n            <div className={style.arrow} onClick={onRightArrowClick}>{'>'}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Date;","import {changeDate} from \"../../../../../Redux/course-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Date from \"./Date\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        date: state.course.date,\r\n        dateNow: state.course.dateNow,\r\n    }\r\n};\r\n\r\nconst DateContainer = connect(mapStateToProps,\r\n    {changeDate})(Date);\r\n\r\nexport default DateContainer;","import {setNewBase} from \"../../../../../Redux/course-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Base from \"../../../../common/Base/Base\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseName: state.course.baseName,\r\n        base: state.course.base,\r\n        }\r\n};\r\n\r\nconst BaseContainer = connect(mapStateToProps,\r\n    {setNewBase})(Base);\r\n\r\nexport default BaseContainer;","import React from 'react';\r\nimport style from './CourseMenu.module.css';\r\nimport DateContainer from \"./Date/DateContainer\";\r\nimport BaseContainer from \"./Base/BaseContainer\";\r\n\r\nconst CourseMenu = () => {\r\n    return (\r\n        <div className={style.courseMenu}>\r\n            <div className={style.courseMenuBase}>\r\n                <div>Курс по отношению к</div>\r\n                <BaseContainer/>\r\n            </div>\r\n            <div className={style.courseMenuDate}>\r\n                <div>Дата</div>\r\n                <DateContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CourseMenu;","import React from 'react';\r\nimport style from './CourseItem.module.css'\r\n\r\nconst CourseItem = (props) => {\r\n    let styleColor, styleIcon;\r\n    if (+props.change > 0) {\r\n        styleColor = style.green\r\n        styleIcon = style.green\r\n\r\n    } else if (+props.change < 0 ) {\r\n        styleColor = style.red\r\n        styleIcon = style.red\r\n    }\r\n    let iconStyle, changeStyle;\r\n    if (props.change === 'нет данных'){\r\n        iconStyle = {display: 'none'}\r\n        changeStyle = {justifyContent: 'flex-end'}\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.courseItems}>\r\n            <div className={style.nameOfCurrency}>\r\n                {props.nameOfCurrency}\r\n            </div>\r\n            <div className={style.designationOfCurrency}>\r\n                {props.designationOfCurrency}\r\n            </div>\r\n            <div className={style.rateOfCurrency}>\r\n                {props.rateOfCurrency}\r\n            </div>\r\n            <div className={`${style.change} ${styleColor}`} style={changeStyle}>\r\n                <div className={`${style.icon} ${styleIcon}`} style={iconStyle}></div>\r\n                <div className={`${style.number} ${styleColor}`}>{props.change}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CourseItem;","import React from 'react';\r\nimport style from './CourseItems.module.css'\r\nimport CourseItem from \"./CourseItem/CourseItem\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst CourseItems = (props) => {\r\n    // if (!props.rates.length || !props.ratesBefore.length) {\r\n    //     return <Preloader/>\r\n    // }\r\n    let CourseItemElements = (props.rates.length !== 0) ?\r\n        props.rates.map(\r\n            (rate, index) => {\r\n                let nameOfCurrency = props.baseName.find(el => el[0] === rate.designationOfCurrency)[1];\r\n\r\n                let change;\r\n                if (props.rates.length > 1 && props.ratesBefore.length > 1) {\r\n                    let rateOfCurrencyBefore = props.ratesBefore[index].rateOfCurrency;\r\n                    change = ((+rate.rateOfCurrency) - (+rateOfCurrencyBefore)).toFixed(6);\r\n                } else change = 'нет данных';\r\n\r\n                if (change > 0) {\r\n                    change = `+${change}`\r\n                };\r\n\r\n                return (\r\n                    <CourseItem\r\n                        key={index}\r\n                        designationOfCurrency={rate.designationOfCurrency}\r\n                        nameOfCurrency={nameOfCurrency}\r\n                        rateOfCurrency={rate.rateOfCurrency}\r\n                        change={change}\r\n                    />\r\n                )\r\n            }\r\n        ) : <div className={style.noData}>Нет данных</div>;\r\n\r\n    return (\r\n        <div className={style.courseItems}>\r\n            {CourseItemElements}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CourseItems;","import React from 'react';\r\nimport CourseItems from \"./CourseItems\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setAfterMount,\r\n    setAfterUpdate,\r\n    setDate,\r\n    setRates,\r\n    setRatesBefore,\r\n    toggleLoading\r\n} from \"../../../../Redux/course-reducer\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nclass CourseItemsContainerAJAX extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setAfterMount(this.props.base);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.base !== this.props.base || prevProps.date !== this.props.date) {\r\n            this.props.setAfterUpdate(this.props.date, this.props.dateBefore, this.props.base);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isLoading ? <Preloader/> : null}\r\n                <CourseItems {...this.props}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        course: state.course,\r\n        date: state.course.date,\r\n        dateBefore: state.course.dateBefore,\r\n        base: state.course.base,\r\n        baseName: state.course.baseName,\r\n        rates: state.course.rates,\r\n        ratesBefore: state.course.ratesBefore,\r\n        isLoading: state.course.isLoading\r\n    }\r\n};\r\n\r\nlet CourseItemsContainer = connect(mapStateToProps,\r\n    {setRates, setDate, toggleLoading, setRatesBefore, setAfterMount, setAfterUpdate})(CourseItemsContainerAJAX);\r\n\r\nexport default CourseItemsContainer;","import React from 'react';\r\nimport style from './Course.module.css'\r\nimport CourseMenu from \"./CourseMenu/CourseMenu\";\r\nimport CourseItemsContainer from \"./CourseItems/CourseItemsContainer\";\r\n\r\nconst Course = () => {\r\n    return (\r\n        <div className={style.course}>\r\n            <CourseMenu/>\r\n            <div className={style.courseHeader}>\r\n                <div className={style.courseHeaderName}>\r\n                    Наименование валюты\r\n                </div>\r\n                <div className={style.courseHeaderCode}>\r\n                    Код\r\n                </div>\r\n                <div className={style.courseHeaderRate}>\r\n                    Курс\r\n                </div>\r\n                <div className={style.change}>\r\n                    Изменение\r\n                </div>\r\n\r\n            </div>\r\n            <CourseItemsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Course;","import React from 'react';\r\nimport style from './Home.module.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className={style.home}>\r\n            <div>Интерфейс разработан на базе API: https://exchangeratesapi.io</div>\r\n            <div>с использованием <span>React</span> + <span>Redux</span></div>\r\n            <div>Использованы модули: 'react-router-dom', 'redux', 'react-redux', 'redux-thunk'</div>\r\n        </div>\r\n    )\r\n};\r\nexport default Home;","import {converterAPI} from \"../DAL/api\";\r\n\r\nconst SET_LEFT_CURRENCY = 'SET-LEFT-CURRENCY';\r\nconst SET_LEFT_CURRENCY_ADD = 'SET-LEFT-CURRENCY-ADD';\r\nconst TOGGLE_LEFT_MODAL = 'TOGGLE-LEFT-MODAL';\r\nconst SET_RIGHT_CURRENCY = 'SET-RIGHT-CURRENCY';\r\nconst SET_RIGHT_CURRENCY_ADD = 'SET-RIGHT-CURRENCY-ADD';\r\nconst TOGGLE_RIGHT_MODAL = 'TOGGLE-RIGHT-MODAL';\r\nconst LEFT_INPUT_CHANGE = 'LEFT-INPUT-CHANGE';\r\nconst LEFT_INPUT_ADD_SYMBOL = 'RIGHT-INPUT-ADD-SYMBOL';\r\nconst RIGHT_INPUT_CHANGE = 'RIGHT-INPUT-CHANGE';\r\nconst RIGHT_INPUT_ADD_SYMBOL = 'LEFT-INPUT-ADD-SYMBOL';\r\nconst SET_RATE = 'SET-RATE';\r\nconst SET_RIGHT_INPUT = 'SET-RIGHT-INPUT';\r\n\r\n\r\nlet initialState = {\r\n    leftCurrency: 'RUB',// выбранная валюта слево\r\n    leftCurrencyAdd: 'DKK', //выбранная валюта слево - добаыочная, из модального окна\r\n    leftModalIsActive: false,// модальное окно выбора валют активно\r\n    rightCurrency: 'USD',// выбранная валюта слево\r\n    rightCurrencyAdd: 'JPY', //выбранная валюта слево - добаыочная, из модального окна\r\n    rightModalIsActive: false,// модальное окно выбора валют активно\r\n    inputLeft: '5000',\r\n    inputRight: '0',\r\n    inputSymbolLeft: '',\r\n    inputSymbolRight: '',\r\n    rate: 1\r\n};\r\n\r\nconst converterReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_LEFT_CURRENCY: {\r\n            return {...state, leftCurrency: action.currency}\r\n        }\r\n        case SET_RIGHT_CURRENCY: {\r\n            return {...state, rightCurrency: action.currency}\r\n        }\r\n        case SET_LEFT_CURRENCY_ADD: {\r\n            return {...state, leftCurrencyAdd: action.currency}\r\n        }\r\n        case SET_RIGHT_CURRENCY_ADD: {\r\n            return {...state, rightCurrencyAdd: action.currency}\r\n        }\r\n        case SET_RATE: {\r\n            return {...state, rate: action.rate}\r\n        }\r\n        case TOGGLE_LEFT_MODAL: {\r\n            return {...state, leftModalIsActive: action.value}\r\n        }\r\n        case TOGGLE_RIGHT_MODAL: {\r\n            return {...state, rightModalIsActive: action.value}\r\n        }\r\n        case LEFT_INPUT_CHANGE: {\r\n            let newValue;\r\n            // в input удалили символ\r\n            if (action.value.length < state.inputLeft.length) {\r\n                newValue = action.value;\r\n            } else if (action.value.length <= 10) {// в input добавили символ, это state.inputSymbolLeft\r\n                if (state.inputSymbolLeft.match(/\\d/)) {// если введенный символ - цифра\r\n                    newValue = action.value;\r\n                }\r\n                if (state.inputSymbolLeft.match(/\\.|\\,/) && !state.inputLeft.match(/\\./)) {// новый символ точка или запятая и их еще нет\r\n                    if (state.inputSymbolLeft === '.') {\r\n                        newValue = action.value;\r\n                    }\r\n                    if (state.inputSymbolLeft === ',') {// если запятая, замена на точку\r\n                        let index = action.value.indexOf(',');\r\n                        newValue = action.value.slice(0, index) + '.' + action.value.slice(index + 1);\r\n                    }\r\n                }\r\n            }\r\n            if (newValue) {\r\n                let inputRightNew = ((+newValue) / state.rate).toFixed(4) + '';\r\n                return {...state, inputLeft: newValue, inputRight: inputRightNew}\r\n            } else { //во всех остальных случаях изменений нет\r\n                return {...state}\r\n            }\r\n        }\r\n\r\n        case RIGHT_INPUT_CHANGE: {\r\n            let newValue;\r\n            // в input удалили символ\r\n            if (action.value.length < state.inputRight.length) {\r\n                newValue = action.value;\r\n            } else if (action.value.length <= 10) {// в input добавили символ, это state.inputSymbolLeft\r\n                if (state.inputSymbolRight.match(/\\d/)) {// если введенный символ - цифра\r\n                    newValue = action.value;\r\n                }\r\n                if (state.inputSymbolRight.match(/\\.|\\,/) && !state.inputRight.match(/\\./)) {// новый символ точка или запятая и их еще нет\r\n                    if (state.inputSymbolRight === '.') {\r\n                        newValue = action.value;\r\n                    }\r\n                    if (state.inputSymbolRight === ',') {// если запятая, замена на точку\r\n                        let index = action.value.indexOf(',');\r\n                        newValue = action.value.slice(0, index) + '.' + action.value.slice(index + 1);\r\n                    }\r\n                }\r\n            }\r\n            if (newValue) {\r\n                let inputLeftNew = ((+newValue) * state.rate).toFixed(4) + '';//\r\n                return {...state, inputRight: newValue, inputLeft: inputLeftNew}\r\n            } else { //во всех остальных случаях изменений нет\r\n                return {...state}\r\n            }\r\n\r\n        }\r\n\r\n        case SET_RIGHT_INPUT: {\r\n            return {...state, inputRight: action.value}\r\n        }\r\n\r\n        case LEFT_INPUT_ADD_SYMBOL: {\r\n            return {...state, inputSymbolLeft: action.symbol}\r\n        }\r\n        case RIGHT_INPUT_ADD_SYMBOL: {\r\n            return {...state, inputSymbolRight: action.symbol}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setLeftCurrency = currency => ({type: SET_LEFT_CURRENCY, currency});\r\nexport const setLeftCurrencyAdd = currency => ({type: SET_LEFT_CURRENCY_ADD, currency});\r\nexport const toggleLeftModal = (value) => ({type: TOGGLE_LEFT_MODAL, value});\r\nexport const setRightCurrency = currency => ({type: SET_RIGHT_CURRENCY, currency});\r\nexport const setRightCurrencyAdd = currency => ({type: SET_RIGHT_CURRENCY_ADD, currency});\r\nexport const toggleRightModal = (value) => ({type: TOGGLE_RIGHT_MODAL, value});\r\nexport const leftInputChange = (value) => ({type: LEFT_INPUT_CHANGE, value});\r\nexport const leftInputAddSymbol = (symbol) => ({type: LEFT_INPUT_ADD_SYMBOL, symbol});\r\nexport const rightInputChange = (value) => ({type: RIGHT_INPUT_CHANGE, value});\r\nexport const rightInputAddSymbol = (symbol) => ({type: RIGHT_INPUT_ADD_SYMBOL, symbol});\r\nexport const setRate = (rate) => ({type: SET_RATE, rate});\r\nexport const setRightInput = (value) => ({type: SET_RIGHT_INPUT, value});\r\n\r\nexport const getRate = (currency, base, inputLeft) => dispatch => {\r\n    //dispatch(toggleLoading(true));\r\n    if (currency === 'EUR' && base === 'EUR') {\r\n        dispatch(setRate(1));\r\n        dispatch(setRightInput(inputLeft));\r\n    } else {\r\n        converterAPI.getRate(currency, base)\r\n            .then(data => {\r\n                dispatch(setRate(data.rates[currency]));\r\n                dispatch(setRightInput(((+inputLeft) / data.rates[currency]).toFixed(4) + ''))\r\n                //dispatch(toggleLoading(false));\r\n            });\r\n    }\r\n\r\n};\r\n\r\nexport default converterReducer;\r\n\r\n","import React from 'react';\r\nimport style from './Input.module.css';\r\nimport {leftInputAddSymbol, leftInputChange} from \"../../../../Redux/converter-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst LeftInput = (props) => {\r\n    let onChange = (e) => {\r\n        props.leftInputChange(e.currentTarget.value);\r\n    };\r\n\r\n    let onKeyPress = (e) => {\r\n        props.leftInputAddSymbol(e.key);\r\n\r\n    };\r\n\r\n    let label = `1 ${props.leftCurrency} = ${(1 / props.rate).toFixed(4)} ${props.rightCurrency}`\r\n\r\n    return (\r\n        <div className={style.input}>\r\n            <input onChange={onChange}\r\n                   onKeyPress={onKeyPress}\r\n                   value={props.inputLeft}/>\r\n            <div className={style.label}>\r\n                {label}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    inputLeft: state.converter.inputLeft,\r\n    leftCurrency: state.converter.leftCurrency,\r\n    rightCurrency: state.converter.rightCurrency,\r\n    rate: state.converter.rate\r\n  });\r\n\r\nlet LeftInputContainer = connect(mapStateToProps,\r\n    {leftInputChange, leftInputAddSymbol})(LeftInput);\r\n\r\nexport default LeftInputContainer;","import React from 'react';\r\nimport style from './ModalItem.module.css';\r\n\r\nlet ModalItem = (props) => {\r\n    let onClick = (e) => {\r\n        if (props.leftModalIsActive) {\r\n            props.setLeftCurrency(e.currentTarget.dataset.code);\r\n            props.setLeftCurrencyAdd(e.currentTarget.dataset.code);\r\n            props.toggleLeftModal(false);\r\n        }\r\n        if (props.rightModalIsActive) {\r\n            props.setRightCurrency(e.currentTarget.dataset.code);\r\n            props.setRightCurrencyAdd(e.currentTarget.dataset.code);\r\n            props.toggleRightModal(false);\r\n        }\r\n    };\r\n    return (\r\n        <div data-code={props.code} onClick={onClick} className={style.item}>\r\n            <div>{props.name}</div>\r\n            <div>{props.code}</div>\r\n        </div>\r\n    )\r\n};\r\nexport default ModalItem;","import React from 'react';\r\nimport style from './Modal.module.css'\r\nimport ModalItem from \"./ModalItem/ModalItem\";\r\nimport {\r\n    setLeftCurrency,\r\n    setLeftCurrencyAdd,\r\n    setRightCurrency,\r\n    setRightCurrencyAdd, toggleLeftModal, toggleRightModal\r\n} from \"../../../../Redux/converter-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet Modal = (props) => {\r\n\r\n    let modalItems = props.baseName.map((el, index) => {\r\n        if (el[0] !== 'RUB' && el[0] !== 'USD' && el[0] !== 'EUR')\r\n            return <ModalItem data-code={el[1]}\r\n                              name={el[1]}\r\n                              code={el[0]}\r\n                              leftModalIsActive={props.leftModalIsActive}\r\n                              rightModalIsActive={props.rightModalIsActive}\r\n                              setLeftCurrency={props.setLeftCurrency}\r\n                              setRightCurrency={props.setRightCurrency}\r\n                              setLeftCurrencyAdd={props.setLeftCurrencyAdd}\r\n                              setRightCurrencyAdd={props.setRightCurrencyAdd}\r\n                              toggleLeftModal={props.toggleLeftModal}\r\n                              toggleRightModal={props.toggleRightModal}\r\n            />\r\n    });\r\n\r\n    let onClick = () => {\r\n        props.toggleLeftModal(false);\r\n        props.toggleRightModal(false);\r\n    };\r\n\r\n    if (props.leftModalIsActive || props.rightModalIsActive) {\r\n        return (\r\n            <div onClick={onClick} className={style.wrapper}>\r\n                <div className={style.modal}>\r\n                    {modalItems}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    baseName: state.course.baseName,\r\n    leftModalIsActive: state.converter.leftModalIsActive,\r\n    rightModalIsActive: state.converter.rightModalIsActive\r\n});\r\n\r\n\r\nlet ModalContainer = connect(mapStateToProps,\r\n    {setLeftCurrency, setRightCurrency, setLeftCurrencyAdd,\r\n        setRightCurrencyAdd, toggleLeftModal, toggleRightModal})(Modal)\r\n\r\nexport default ModalContainer;\r\n","import React from 'react';\r\nimport style from './Input.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {rightInputAddSymbol, rightInputChange} from \"../../../../Redux/converter-reducer\";\r\n\r\nconst RightInput = (props) => {\r\n    let onChange = (e) => {\r\n        props.rightInputChange(e.currentTarget.value);\r\n    };\r\n\r\n    let onKeyPress = (e) => {\r\n        props.rightInputAddSymbol(e.key);\r\n    };\r\n\r\n    let label = `1 ${props.rightCurrency} = ${props.rate.toFixed(4)} ${props.leftCurrency}`;\r\n    return (\r\n        <div className={style.input}>\r\n            <input onChange={onChange}\r\n                   onKeyPress={onKeyPress}\r\n                   value={props.inputRight}/>\r\n            <div className={style.label}>\r\n                {label}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    inputRight: state.converter.inputRight,\r\n    leftCurrency: state.converter.leftCurrency,\r\n    rightCurrency: state.converter.rightCurrency,\r\n    rate: state.converter.rate\r\n});\r\n\r\nlet RightInputContainer = connect(mapStateToProps,\r\n    {rightInputChange, rightInputAddSymbol})(RightInput);\r\n\r\nexport default RightInputContainer;","import React from \"react\";\r\nimport style from \"./SelectItem.module.css\";\r\n\r\nconst SelectItem = (props) => {\r\n    let onClick = (e) => {\r\n        if (props.currency !== e.currentTarget.innerText) {\r\n            props.setCurrency(e.currentTarget.innerText);\r\n        }\r\n    };\r\n    return (\r\n        <div onClick={onClick} className={props.className}>\r\n            {props.text}\r\n        </div>)\r\n};\r\n\r\nexport default SelectItem;\r\n","import React from 'react';\r\nimport style from './Select.module.css';\r\nimport SelectItem from \"./SelectItem/SelectItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {setLeftCurrency, toggleLeftModal} from \"../../../../Redux/converter-reducer\";\r\n\r\n//const Buttons = (props)\r\n\r\nconst LeftSelect = (props) => {\r\n    let leftCurr = props.leftCurrency;\r\n    let style1 = (leftCurr === 'RUB')\r\n        ? `${style.item} ${style.selected}`\r\n        : style.item;\r\n    let style2 = (leftCurr === 'USD')\r\n        ? `${style.item} ${style.selected}`\r\n        : style.item;\r\n    let style3 = (leftCurr === 'EUR')\r\n        ? `${style.item} ${style.selected}`\r\n        : style.item;\r\n    let style4 = (leftCurr !== 'RUB' && leftCurr !== 'USD' && leftCurr !== 'EUR')\r\n        ? `${style.item} ${style.selected}`\r\n        : style.item;\r\n    let style5 = (props.leftModalIsActive)\r\n        ? `${style.modalActivator} ${style.select}`\r\n        : style.modalActivator;\r\n    let onClick = (e) => {\r\n        if (leftCurr !== e.currentTarget.innerText) {\r\n            props.setLeftCurrency(e.currentTarget.innerText);\r\n        }\r\n    };\r\n\r\n    let toggleModal = () => {\r\n        props.toggleLeftModal(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.title}>У меня есть</div>\r\n            <div className={style.select}>\r\n                <SelectItem currency={props.leftCurrency} setCurrency={props.setLeftCurrency} className={style1}\r\n                            text='RUB'/>\r\n                <SelectItem currency={props.leftCurrency} setCurrency={props.setLeftCurrency} className={style2}\r\n                            text='USD'/>\r\n                <SelectItem currency={props.leftCurrency} setCurrency={props.setLeftCurrency} className={style3}\r\n                            text='EUR'/>\r\n                <SelectItem currency={props.leftCurrency} setCurrency={props.setLeftCurrency} className={style4}\r\n                            text={props.leftCurrencyAdd}/>\r\n                <div onClick={toggleModal} className={style5}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    leftCurrency: state.converter.leftCurrency,\r\n    leftModalIsActive: state.converter.leftModalIsActive,\r\n    leftCurrencyAdd: state.converter.leftCurrencyAdd,\r\n})\r\n\r\nlet LeftSelectContainer = connect(mapStateToProps, {setLeftCurrency, toggleLeftModal})(LeftSelect)\r\n\r\nexport default LeftSelectContainer;","import React from 'react';\r\nimport style from './Select.module.css';\r\nimport SelectItem from \"./SelectItem/SelectItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {setRightCurrency, toggleRightModal} from \"../../../../Redux/converter-reducer\";\r\n\r\nconst RightSelect = (props) => {\r\n    let rightCurr = props.rightCurrency;\r\n    let style1 = (rightCurr === 'RUB')\r\n        ? `${style.item} ${style.selected}`\r\n        : style.item;\r\n    let style2 = (rightCurr === 'USD')\r\n        ? `${style.item} ${style.selected}`\r\n        : style.item;\r\n    let style3 = (rightCurr === 'EUR')\r\n        ? `${style.item} ${style.selected}`\r\n        : style.item;\r\n    let style4 = (rightCurr !== 'RUB' && rightCurr !== 'USD' && rightCurr !== 'EUR')\r\n        ? `${style.item} ${style.selected}`\r\n        : style.item;\r\n    let style5 = (props.rightModalIsActive)\r\n        ? `${style.modalActivator} ${style.select}`\r\n        : style.modalActivator;\r\n\r\n    let toggleModal = () => {\r\n        props.toggleRightModal(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div  className={style.title}>Хочу приобрести</div>\r\n        <div className={style.select}>\r\n\r\n            <SelectItem currency={props.rightCurrency} setCurrency={props.setRightCurrency} className={style1}\r\n                        text='RUB'/>\r\n            <SelectItem currency={props.rightCurrency} setCurrency={props.setRightCurrency} className={style2}\r\n                        text='USD'/>\r\n            <SelectItem currency={props.rightCurrency} setCurrency={props.setRightCurrency} className={style3}\r\n                        text='EUR'/>\r\n            <SelectItem currency={props.rightCurrency} setCurrency={props.setRightCurrency} className={style4}\r\n                        text={props.rightCurrencyAdd}/>\r\n            <div onClick={toggleModal} className={style5}></div>\r\n        </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    rightCurrency: state.converter.rightCurrency,\r\n    rightModalIsActive: state.converter.rightModalIsActive,\r\n    rightCurrencyAdd: state.converter.rightCurrencyAdd,\r\n})\r\n\r\nlet RightSelectContainer = connect(mapStateToProps, {setRightCurrency, toggleRightModal})(RightSelect)\r\n\r\n\r\n\r\nexport default RightSelectContainer;","import React from 'react';\r\nimport style from './Converter.module.css'\r\nimport LeftInputContainer from \"./Input/LeftInput\";\r\nimport ModalContainer from \"./Modal/Modal\";\r\nimport RightInputContainer from \"./Input/RightInput\";\r\nimport LeftSelectContainer from \"./LeftSelect/LeftSelect\";\r\nimport RightSelectContainer from \"./LeftSelect/RightSelect\";\r\n\r\nconst Converter = (props) => {\r\n    return (\r\n        <div className={style.converter}>\r\n            <div className={style.select}>\r\n                <LeftSelectContainer/>\r\n                <RightSelectContainer/>\r\n                <ModalContainer/>\r\n            </div>\r\n            <div className={style.input}>\r\n                <LeftInputContainer/>\r\n                <RightInputContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Converter;","import React from \"react\";\r\nimport Converter from \"./Converter\";\r\nimport {connect} from \"react-redux\";\r\nimport {getRate} from \"../../../Redux/converter-reducer\";\r\n\r\nclass ConverterAJAX extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getRate(this.props.leftCurrency, this.props.rightCurrency, this.props.inputLeft);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.leftCurrency !== this.props.leftCurrency || prevProps.rightCurrency !== this.props.rightCurrency) {\r\n            this.props.getRate(this.props.leftCurrency, this.props.rightCurrency, this.props.inputLeft);\r\n        }\r\n          }\r\n\r\n    render() {\r\n        return (\r\n            <Converter/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        leftCurrency: state.converter.leftCurrency,\r\n        rightCurrency: state.converter.rightCurrency,\r\n        inputLeft: state.converter.inputLeft\r\n    }\r\n};\r\n\r\nlet ConverterContainer = connect(mapStateToProps,{getRate})(ConverterAJAX);\r\n\r\nexport default ConverterContainer;","import React from 'react';\r\nimport style from './Main.module.css'\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Statistic from \"./Statistic/Statistic\";\r\nimport Course from \"./Course/Course\";\r\n\r\nimport Home from \"./Home/Home\";\r\nimport ConverterContainer from \"./Converter/ConverterContainer\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main className={style.main}>\r\n            <Switch>\r\n                <Route exact path='/exchange-rates' render={() => <Home/>}/>\r\n                <Route exact path='/' render={() => <Home/>}/>\r\n                <Route path='/course' render={() => <Course/>}/>\r\n                <Route path='/statistic' render={() => <Statistic/>}/>\r\n                <Route path='/converter' render={() => <ConverterContainer/>}/>\r\n            </Switch>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Main from \"./Components/Main/Main\";\n\nfunction App() {\n  return (\n        <div className=\"app-wrapper\">\n            <Header/>\n            <Main/>\n        </div>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport courseReducer from \"./course-reducer\";\r\nimport statisticReducer from \"./statistic-reducer\";\r\nimport converterReducer from \"./converter-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    course: courseReducer,\r\n    statistic: statisticReducer,\r\n    converter: converterReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./Redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}