{"version":3,"sources":["Components/Main/Course/Course.module.css","Components/Main/Statistic/Statistic.module.css","Components/Main/Course/CourseMenu/CourseMenuDate/CourseMenuDate.module.css","Components/Main/Statistic/Graph/GraphItem/GraphItem.module.css","Components/Main/Course/CourseMenu/CourseMenu.module.css","Components/Main/Course/CourseItems/CourseItems.module.css","Components/Main/Main.module.css","Components/Main/Statistic/Currency/Currency.module.css","Components/Main/Statistic/Base/Base.module.css","Components/Main/Statistic/Graph/Graph.module.css","Components/common/Preloader/Preloader.module.css","assets/oval.svg","Components/Main/Statistic/Period/Period.module.css","Components/Main/Converter/Converter.module.css","Components/common/Base/Base.module.css","Components/Header/Header.module.css","Components/Main/Course/CourseItems/CourseItem/CourseItem.module.css","Components/Header/Header.js","DAL/date.js","DAL/api.js","Redux/course-reduser.js","Components/Main/Statistic/Currency/Currency.js","Components/Main/Statistic/Currency/CurrencyContainer.js","Components/Main/Statistic/Base/Base.js","Components/Main/Statistic/Base/BaseContainer.js","Components/Main/Statistic/Graph/GraphItem/GraphItem.js","Components/common/Preloader/Preloader.js","Components/Main/Statistic/Graph/Graph.js","Components/Main/Statistic/Graph/GraphContainer.js","Components/Main/Statistic/Period/Period.js","Components/Main/Statistic/Period/PeriodContainer.js","Components/Main/Statistic/Statistic.js","Components/Main/Converter/Converter.js","Components/common/Base/Base.js","Components/Main/Course/CourseMenu/CourseMenuBase/CourseMenuBaseContainer.js","Components/Main/Course/CourseMenu/CourseMenuDate/CourseMenuDate.js","Components/Main/Course/CourseMenu/CourseMenuDate/CourseMenuDateContainer.js","Components/Main/Course/CourseMenu/CourseMenu.js","Components/Main/Course/CourseItems/CourseItem/CourseItem.js","Components/Main/Course/CourseItems/CourseItems.js","Components/Main/Course/CourseItems/CourseItemsContainer.js","Components/Main/Course/Course.js","Components/Main/Main.js","App.js","Redux/redux-store.js","index.js"],"names":["module","exports","Header","className","style","header","headerLogo","nav","exact","to","item","activeClassName","active","DATE","dateTranslate","date","monthWord","year","match","month","day","dateToJS","Date","dateToStr","getFullYear","getMonth","getDate","getDateNew","change","dateNewJS","dateJS","this","getTime","getStartPeriodDate","period","startPeriodDateJS","instance","axios","baseURL","API","get","then","responce","data","base","dateStart","dateEnd","currency","initialState","baseName","rates","ratesBefore","dateNow","dateBefore","isloading","ratesForPeriod","datesForPeriod","startPeriodDate","setNewBase","type","setRates","setRatesBefore","setDate","toggleLoading","isLoading","setRatesForPeriod","courseReduser","state","action","dateNew","dateBeforeNew","console","log","ratesArr","key","push","designationOfCurrency","rateOfCurrency","toFixed","nameForCode","code","find","el","sort","a0","b0","a","b","rate","ratesArrValid","dateCurr","i","Currency","props","optionElements","map","index","value","onChange","event","target","setNewCurrency","CurrencyContainer","connect","course","Base","courseMenuBase","BaseContainerAJAX","getRatesForPeriod","prevProps","React","Component","BaseContainer","dispatch","GraphItem","styleItem","Preloader","preloader","src","alt","Graph","filter","rateMax","Math","max","apply","rateMin","min","items","dateGraph","width","colorRed","colorGreen","backgroundColor","floor","graph","GraphContainer","Period","setNewPeriod","PeriodContainer","Statistic","statistic","Converter","converter","CourseMenuBaseContainerAJAX","CourseMenuBaseContainer","CourseMenuDate","courseMenuDate","arrow","onClick","changeDate","CourseMenuDateContainer","CourseMenu","courseMenu","CourseItem","styleColor","green","red","courseItems","nameOfCurrency","CourseItems","CourseItemElements","length","rateOfCurrencyBefore","noData","CourseItemsContainerAJAX","Promise","all","results","CourseItemsContainer","Course","courseHeader","courseHeaderName","courseHeaderCode","courseHeaderRate","Main","main","path","render","App","redusers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a80ba4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"course\":\"Course_course__TErUt\",\"courseHeader\":\"Course_courseHeader__2oVIO\",\"courseHeaderName\":\"Course_courseHeaderName__1nor4\",\"courseHeaderCode\":\"Course_courseHeaderCode__2o4sd\",\"courseHeaderRate\":\"Course_courseHeaderRate__Psz9v\",\"change\":\"Course_change__3uFCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistic_statistic__1ToLh\",\"currency\":\"Statistic_currency__-OMJG\",\"period\":\"Statistic_period__36Nhe\",\"graph\":\"Statistic_graph__3I7qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseMenuDate\":\"CourseMenuDate_courseMenuDate__1XwqZ\",\"date\":\"CourseMenuDate_date__2YNp2\",\"arrow\":\"CourseMenuDate_arrow__1PJYo\",\"disable\":\"CourseMenuDate_disable__1XSiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"GraphItem_item__TDRII\",\"rate\":\"GraphItem_rate__3kmJt\",\"date\":\"GraphItem_date__NWbvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseMenu\":\"CourseMenu_courseMenu__3Ftt_\",\"courseMenuBase\":\"CourseMenu_courseMenuBase__1Bp3H\",\"courseMenuDate\":\"CourseMenu_courseMenuDate__2bby8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseItems\":\"CourseItems_courseItems__1p-Ja\",\"noData\":\"CourseItems_noData__2o9Te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3Dbnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currency\":\"Currency_currency__1OTG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseMenuBase\":\"Base_courseMenuBase__Vw8oQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"Graph_graph__21cTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__25AOS\"};","module.exports = __webpack_public_path__ + \"static/media/oval.be00fc4a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"period\":\"Period_period__1m6fR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"converter\":\"Converter_converter__msN0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseMenuBase\":\"Base_courseMenuBase__3j4Gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ez_C\",\"headerLogo\":\"Header_headerLogo__1Ev0u\",\"nav\":\"Header_nav__3VJy_\",\"item\":\"Header_item__1vX5z\",\"active\":\"Header_active__GU8Ux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"courseItems\":\"CourseItem_courseItems__1SN6a\",\"nameOfCurrency\":\"CourseItem_nameOfCurrency__32CWr\",\"designationOfCurrency\":\"CourseItem_designationOfCurrency__2oIWM\",\"rateOfCurrency\":\"CourseItem_rateOfCurrency__7ETec\",\"change\":\"CourseItem_change__ggenQ\",\"green\":\"CourseItem_green__MC0z9\",\"red\":\"CourseItem_red__2itN8\"};","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.headerLogo}>\r\n                Курсы валют\r\n            </div>\r\n            <nav className={style.nav}>\r\n                <NavLink exact to='/' className={style.item} activeClassName={style.active}>Курсы</NavLink>\r\n                <NavLink to='/statistic' className={style.item} activeClassName={style.active}>Статистика</NavLink>\r\n                <NavLink to='/converter' className={style.item} activeClassName={style.active}>Конвертер</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","//объект с методами получения и изменения дат\r\nexport const DATE = {\r\n    // перевод даты из формата REST-API 'YYYY-MM-DD' в формат вывода 'DAY MONTH YEAR'\r\n    dateTranslate(date) {\r\n        let year = date.match(/\\d+/g)[0];\r\n        let month = date.match(/\\d+/g)[1];\r\n        let day = date.match(/\\d+/g)[2];\r\n        let monthWord;\r\n        switch (+month) {\r\n            case 1: {\r\n                monthWord = 'января';\r\n                break;\r\n            }\r\n            case 2: {\r\n                monthWord = 'февраля';\r\n                break;\r\n            }\r\n            case 3: {\r\n                monthWord = 'марта';\r\n                break;\r\n            }\r\n            case 4: {\r\n                monthWord = 'апреля';\r\n                break;\r\n            }\r\n            case 5: {\r\n                monthWord = 'мая';\r\n                break;\r\n            }\r\n            case 6: {\r\n                monthWord = 'июня';\r\n                break;\r\n            }\r\n            case 7: {\r\n                monthWord = 'июля';\r\n                break;\r\n            }\r\n            case 8: {\r\n                monthWord = 'августа';\r\n                break;\r\n            }\r\n            case 9: {\r\n                monthWord = 'сентября';\r\n                break;\r\n            }\r\n            case 10: {\r\n                monthWord = 'октября';\r\n                break;\r\n            }\r\n            case 11: {\r\n                monthWord = 'ноября';\r\n                break;\r\n            }\r\n            case 12: {\r\n                monthWord = 'декабря';\r\n                break;\r\n            }\r\n        }\r\n        return `${day} ${monthWord} ${year}`;\r\n    },\r\n\r\n    // перевод даты из формата 'YYYY-MM-DD' в объект JS Date()\r\n    dateToJS(date) {\r\n        let year = date.match(/\\d+/g)[0];\r\n        let month = date.match(/\\d+/g)[1] - 1;\r\n        let day = date.match(/\\d+/g)[2];\r\n        return new Date(year, month, day);\r\n    },\r\n\r\n    // перевод даты из формата объекта JS Date() в 'YYYY-MM-DD'\r\n    dateToStr(date) {\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth() + 1;\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n        let day = date.getDate();\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n        return `${year}-${month}-${day}`;\r\n    },\r\n\r\n    // получение следующей/предыдущей даты\r\n    getDateNew(change, date) {\r\n        // change = 'plus', 'minus'\r\n        // date, return = 'YYYY-MM-DD'\r\n        // перевод даты из формата 'YYYY-MM-DD' в объект Date JS\r\n        let dateJS = this.dateToJS(date);\r\n        // получение предыдущей/следующей даты\r\n        let dateNewJS;\r\n        if (change === 'minus') {\r\n            dateNewJS = new Date(dateJS.getTime() - 24 * 60 * 60 * 1000);\r\n        } else if (change === 'plus') {\r\n            dateNewJS = new Date(dateJS.getTime() + 24 * 60 * 60 * 1000);\r\n        }\r\n        // перевод предыдущей/следующей даты из объекта Date в формат state\r\n        return this.dateToStr(dateNewJS);\r\n    },\r\n\r\n    // получение даты начала периода\r\n    getStartPeriodDate(date, period) {\r\n        // date = 'YYYY-MM-DD'\r\n        // period = 3, 7, 14, 30\r\n        let dateJS = this.dateToJS(date);\r\n        let startPeriodDateJS = new Date(dateJS.getTime() - period * 24 * 60 * 60 * 1000);\r\n        return this.dateToStr(startPeriodDateJS);\r\n    }\r\n}","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.exchangeratesapi.io/'\r\n});\r\n\r\nexport const API = {\r\n    // запрос без параметров, получаем только дату\r\n    getInitial() {\r\n        return instance.get(`latest`)\r\n            .then(responce => responce.data)\r\n    },\r\n\r\n    // получаем курсы по установленной базу за последнее число\r\n    getLatest(base) {\r\n        return instance.get(`latest?base=${base}`)\r\n            .then(responce => responce.data)\r\n    },\r\n\r\n    // получить курсы за заданную дату по заданной базе\r\n    getByDate(date, base) {\r\n        return instance.get(`history?start_at=${date}&end_at=${date}&base=${base}`)\r\n            .then(responce => responce.data)\r\n    },\r\n\r\n    // получить курсы за период по заданной базе и валюте\r\n    // валюту и базу в запросе надо поменять местами, т.к. в api перерасчет не к базе, а от базы\r\n    getByPeriod(dateStart, dateEnd, currency, base) {\r\n        return instance.get(`history?start_at=${dateStart}&end_at=${dateEnd}&symbols=${base}&base=${currency}`)\r\n            .then(responce => responce.data)\r\n    }\r\n};","import {DATE as date, DATE} from \"../DAL/date\";\r\nimport {API} from \"../DAL/api\";\r\n\r\nconst SET_NEW_BASE = 'SET-NEW-BASE';\r\nconst SET_NEW_RATES = 'SET-NEW-RATES';\r\nconst SET_NEW_RATES_BEFORE = 'SET-NEW-RATES-BEFORE';\r\nconst SET_DATE = 'SET-DATE';\r\nconst CHANGE_DATE = 'CHANGE_DATE';\r\nconst TOGGLE_LOADING = 'TOGGLE-LOADING';\r\nconst SET_NEW_CURRENCY = 'SET-NEW-CURRENCY';\r\nconst SET_NEW_PERIOD = 'SET-NEW-PERIOD';\r\nconst SET_RATES_FOR_PERIOD = 'SET-RATES-FOR-PERIOD';\r\n\r\nlet initialState = {\r\n    baseName: [\r\n        ['AUD', 'Австралийский доллар'],\r\n        ['BGN', 'Болгарский лев'],\r\n        ['BRL', 'Бразильский реал'],\r\n        ['GBP', 'Британский фунт стерлингов'],\r\n        ['HUF', 'Венгерский форинт'],\r\n        ['HKD', 'Гонконгский доллар'],\r\n        ['DKK', 'Датская крона'],\r\n        ['USD', 'Доллар США'],\r\n        ['EUR', 'Евро'],\r\n        ['INR', 'Индийская рупия'],\r\n        ['IDR', 'Индонезийская рупия'],\r\n        ['ISK', 'Исландская крона'],\r\n        ['CAD', 'Канадский доллар'],\r\n        ['MYR', 'Малайский ринггит'],\r\n        ['MXN', 'Мексиканское песо'],\r\n        ['TRY', 'Новая турецкая лира'],\r\n        ['NZD', 'Новозеландский доллар'],\r\n        ['ILS', 'Новый израильский шекель'],\r\n        ['NOK', 'Норвежская крона'],\r\n        ['PLN', 'Польский злотый'],\r\n        ['RUB', 'Российский рубль'],\r\n        ['RON', 'Румынский лей'],\r\n        ['ZAR', 'Рэнд'],\r\n        ['SGD', 'Сингапурский доллар'],\r\n        ['THB', 'Тайский бат'],\r\n        ['PHP', 'Филиппинское песо'],\r\n        ['HRK', 'Хорватская куна'],\r\n        ['CZK', 'Чешская крона'],\r\n        ['SEK', 'Шведская крона'],\r\n        ['CHF', 'Швейцарский франк'],\r\n        ['CNY', 'Юань'],\r\n        ['KRW', 'Южнокорейская вона'],\r\n        ['JPY', 'Японская иена']\r\n    ],\r\n    rates: [],\r\n    ratesBefore: [],\r\n    base: 'RUB',\r\n    dateNow: '2010-06-06', // дата на данный момент времени\r\n    date: '2010-06-06',     // изменяемая дата\r\n    dateBefore: '2010-06-06',\r\n    isloading: false,\r\n    currency: 'EUR',// выбранная валюта для статистики\r\n    ratesForPeriod: [], // массив курсов за период\r\n    datesForPeriod: [], // массив дат за период\r\n    period: 14, // период\r\n    startPeriodDate: '' // начальная дата периода\r\n};\r\n\r\n\r\nconst courseReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_NEW_BASE: {\r\n            return {\r\n                ...state,\r\n                base: action.base\r\n            }\r\n        }\r\n\r\n        case SET_NEW_CURRENCY: {\r\n            return {\r\n                ...state,\r\n                currency: action.currency\r\n            }\r\n        }\r\n\r\n        case SET_DATE: {// первоначальная установка текущей даты и даты на данный момент времени и предыдущей дата\r\n            return {\r\n                ...state,\r\n                dateNow: action.date,\r\n                date: action.date,\r\n                dateBefore: DATE.getDateNew('minus', action.date),\r\n                startPeriodDate: DATE.getStartPeriodDate(action.date, state.period)\r\n            }\r\n        }\r\n\r\n        case CHANGE_DATE: {\r\n            let dateNew = DATE.getDateNew(action.change, state.date);\r\n            let dateBeforeNew = DATE.getDateNew('minus', dateNew);\r\n            console.log(dateNew)\r\n            console.log(dateBeforeNew)\r\n            return {\r\n                ...state,\r\n                date: dateNew,\r\n                dateBefore: dateBeforeNew\r\n            }\r\n        }\r\n\r\n        case SET_NEW_RATES: {\r\n            let ratesArr = [];\r\n            for (let key in action.rates) {\r\n                ratesArr.push({\r\n                    designationOfCurrency: key,\r\n                    rateOfCurrency: (1 / (+action.rates[key])).toFixed(6)\r\n                });\r\n            }\r\n\r\n            // если base = EUR, добавить строку (API не добавляет)\r\n            if (state.base === 'EUR') {\r\n                ratesArr.push({\r\n                    designationOfCurrency: 'EUR',\r\n                    rateOfCurrency: '1.0000'\r\n                });\r\n            }\r\n\r\n            // получить из кода название\r\n            let nameForCode = (code) => state.baseName.find(el => el[0] === code)[1];\r\n\r\n            // сортировка по названию валюты\r\n            ratesArr.sort(function (a0, b0) {\r\n                let a = nameForCode(a0.designationOfCurrency);\r\n                let b = nameForCode(b0.designationOfCurrency);\r\n\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                rates: ratesArr\r\n            }\r\n\r\n        }\r\n\r\n        case SET_NEW_RATES_BEFORE: {\r\n            let ratesArr = [];\r\n            for (let key in action.ratesBefore) {\r\n                ratesArr.push({\r\n                    designationOfCurrency: key,\r\n                    rateOfCurrency: (1 / (+action.ratesBefore[key])).toFixed(6)\r\n                });\r\n            }\r\n\r\n            // если base = EUR, добавить строку (API не добавляет)\r\n            if (state.base === 'EUR') {\r\n                ratesArr.push({\r\n                    designationOfCurrency: 'EUR',\r\n                    rateOfCurrency: '1'\r\n                });\r\n            }\r\n\r\n            // получить из кода название\r\n            let nameForCode = (code) => state.baseName.find(el => el[0] === code)[1];\r\n\r\n            // сортировка по названию валюты\r\n            ratesArr.sort(function (a0, b0) {\r\n                let a = nameForCode(a0.designationOfCurrency);\r\n                let b = nameForCode(b0.designationOfCurrency);\r\n\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                ratesBefore: ratesArr\r\n            }\r\n        }\r\n\r\n        case TOGGLE_LOADING: {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n\r\n        case SET_NEW_PERIOD: {\r\n            // определение новой startPeriodDate\r\n            return {\r\n                ...state,\r\n                period: action.period,\r\n                startPeriodDate: DATE.getStartPeriodDate(state.dateNow, action.period)\r\n            }\r\n        }\r\n\r\n        case SET_RATES_FOR_PERIOD: {\r\n            let ratesArr = [];\r\n            for (let key in action.rates) {\r\n                let rate = action.rates[key][state.base].toFixed(4);\r\n                ratesArr.push([key, rate]);\r\n            }\r\n            // валидация на пропушенные дни\r\n            let ratesArrValid = [];\r\n            let dateCurr = state.startPeriodDate;\r\n            for (let i = 0; i < state.period; i++) {\r\n                // поиск в массиве ratesArr элемента el такого, что el[0]=dateCurr\r\n                // если он есть добавляем в его ratesArrValid\r\n                // если его нет добавляем пустую строку\r\n                let el = ratesArr.find(el => el[0] === dateCurr);\r\n                if (el) {\r\n                    ratesArrValid.push(el)\r\n                } else {\r\n                    ratesArrValid.push([dateCurr, null])\r\n                }\r\n                dateCurr = date.getDateNew('plus', dateCurr);\r\n            }\r\n\r\n            return {...state, ratesForPeriod: ratesArrValid}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setNewBase = base => ({type: SET_NEW_BASE, base});\r\nexport const setNewCurrency = currency => ({type: SET_NEW_CURRENCY, currency});\r\nexport const setRates = rates => ({type: SET_NEW_RATES, rates});\r\nexport const setRatesBefore = ratesBefore => ({type: SET_NEW_RATES_BEFORE, ratesBefore});\r\nexport const setDate = date => ({type: SET_DATE, date});\r\nexport const changeDate = change => ({type: CHANGE_DATE, change});\r\nexport const toggleLoading = isLoading => ({type: TOGGLE_LOADING, isLoading});\r\nexport const setNewPeriod = period => ({type: SET_NEW_PERIOD, period});\r\nexport const setRatesForPeriod = rates => ({type: SET_RATES_FOR_PERIOD, rates});\r\nexport const getRatesForPeriod = (startPeriodDate, dateNow, currency, base) => dispatch => {\r\n    dispatch(toggleLoading(true));\r\n    API.getByPeriod(startPeriodDate, dateNow, currency, base)\r\n        .then(data => {\r\n            dispatch(setRatesForPeriod(data.rates));\r\n            dispatch(toggleLoading(false));\r\n        });\r\n};\r\n\r\nexport default courseReduser;\r\n\r\n","import React from 'react';\r\nimport style from './Currency.module.css';\r\n\r\nconst Currency = (props) => {\r\n\r\n    let onCurrencyChange = (event) => {\r\n        let currency = event.target.value;\r\n        props.setNewCurrency(currency);\r\n    };\r\n\r\n    let optionElements = props.baseName.map(\r\n        (item, index) => <option key={index} value={item[0]}>{`${item[0]} - ${item[1]}`}</option>\r\n    );\r\n\r\n    return (\r\n        <div className={style.currency}>\r\n            <select onChange={onCurrencyChange} value={props.currency}>\r\n                {optionElements}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Currency;","import {connect} from \"react-redux\";\r\nimport {setNewCurrency, setRatesBefore} from \"../../../../Redux/course-reduser\";\r\nimport Currency from \"./Currency\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseName: state.course.baseName,\r\n        currency: state.course.currency\r\n    }\r\n};\r\n\r\nconst CurrencyContainer = connect(mapStateToProps,\r\n    {setNewCurrency, setRatesBefore})(Currency);\r\n\r\nexport default CurrencyContainer;","import React from 'react';\r\nimport style from './Base.module.css';\r\n\r\nconst Base = (props) => {\r\n\r\n    let onBaseChange = (event) => {\r\n        props.setNewBase(event.target.value);\r\n    };\r\n\r\n    let optionElements = props.baseName.map(\r\n        (item, index) => <option key={index} value={item[0]}>{`${item[0]} - ${item[1]}`}</option>\r\n    );\r\n\r\n    return (\r\n        <div className={style.courseMenuBase}>\r\n            <select onChange={onBaseChange} value={props.base}>\r\n                {optionElements}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Base;","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {API} from \"../../../../DAL/api\";\r\nimport {\r\n    getRatesForPeriod,\r\n    setDate,\r\n    setNewBase,\r\n    toggleLoading\r\n} from \"../../../../Redux/course-reduser\";\r\nimport {DATE} from \"../../../../DAL/date\";\r\nimport Base from \"./Base\";\r\n\r\n\r\nclass BaseContainerAJAX extends React.Component {\r\n    componentDidMount() {\r\n        // получение из запроса - даты на данный момент\r\n        this.props.toggleLoading(true);\r\n        console.log('BaseContainer DidMount')\r\n        API.getInitial()\r\n            .then(data => {\r\n                this.props.toggleLoading(false);\r\n                this.props.setDate(data.date);\r\n                this.props.getRatesForPeriod(DATE.getStartPeriodDate(data.date, this.props.period), data.date, this.props.currency, this.props.base);\r\n                this.props.toggleLoading(false);\r\n            })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        console.log('BaseContainer DidUpdate')\r\n        if (prevProps.startPeriodDate !== this.props.startPeriodDate\r\n            || prevProps.dateNow !== this.props.dateNow\r\n            || prevProps.currency !== this.props.currency\r\n            || prevProps.base !== this.props.base) {\r\n            console.log('BaseContainer DidUpdate')\r\n            this.props.getRatesForPeriod(this.props.startPeriodDate, this.props.dateNow, this.props.currency, this.props.base);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Base\r\n            setNewBase={this.props.setNewBase}\r\n            baseName={this.props.baseName}\r\n            base={this.props.base}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseName: state.course.baseName,\r\n        base: state.course.base,\r\n        period: state.course.period,\r\n        currency: state.course.currency,\r\n        startPeriodDate: state.course.startPeriodDate,\r\n        dateNow: state.course.dateNow\r\n    }\r\n};\r\n\r\nconst BaseContainer = connect(mapStateToProps,\r\n    {setNewBase, toggleLoading, setDate, getRatesForPeriod})(BaseContainerAJAX);\r\n\r\nexport default BaseContainer;","import React from 'react';\r\nimport style from './GraphItem.module.css'\r\n\r\nconst GraphItem = (props) => {\r\n    return (\r\n        <div className={style.item} style={props.styleItem}>\r\n            <div className={style.rate}>{props.rate}</div>\r\n            <div className={style.date}>{props.date}</div>\r\n        </div>\r\n        )\r\n};\r\n\r\nexport default GraphItem;\r\n","import React from 'react';\r\nimport style from './Preloader.module.css';\r\nimport preloader from '../../../assets/oval.svg'\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <img src={preloader} alt=\"\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;\r\n\r\n","import React from 'react';\r\nimport style from './Graph.module.css'\r\nimport GraphItem from \"./GraphItem/GraphItem\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\n\r\nconst Graph = (props) => {\r\n    let rates = props.rates.map(el => el[1]).filter(el => el);\r\n    let rateMax = Math.max.apply(null, rates);\r\n    let rateMin = Math.min.apply(null, rates);\r\n\r\n    let items = props.rates.map((el) => {\r\n        let rate, dateGraph, width, colorRed, colorGreen, backgroundColor;\r\n\r\n        let month = el[0].match(/\\d+/g)[1];\r\n        let day = el[0].match(/\\d+/g)[2];\r\n        dateGraph = `${day}.${month}`;\r\n\r\n        if (el[1]) {\r\n            width = Math.floor(100 * (50 + 250 * (el[1] - rateMin) / (rateMax - rateMin)) / 300) + '%';\r\n            colorRed = Math.floor(255 * (el[1] - rateMin) / (rateMax - rateMin));\r\n            colorGreen = Math.floor(255 * (rateMax - el[1]) / (rateMax - rateMin));\r\n            backgroundColor = `rgb(${colorRed},${colorGreen},0`;\r\n            rate = el[1];\r\n\r\n            if (+el[1] === rateMax) {\r\n                rate = `${el[1]} = maximum`;\r\n            }\r\n            if (+el[1] === rateMin) {\r\n                rate = `${el[1]} = minimum`;\r\n            }\r\n        } else {\r\n            width = 0;\r\n            rate = 'no data';\r\n        }\r\n        let style = {\r\n            width: width,\r\n            backgroundColor: backgroundColor\r\n        };\r\n        return (<GraphItem\r\n            styleItem={style}\r\n            rate={rate}\r\n            date={dateGraph}\r\n            key={el[0]}\r\n        />)\r\n    });\r\n\r\n    return (\r\n        <div className={style.graph}>\r\n            {props.isLoading ? <Preloader/> : null}\r\n            {items}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Graph;\r\n","import Graph from \"./Graph\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = state => {\r\n    return{\r\n        rates: state.course.ratesForPeriod,\r\n        isLoading: state.course.isLoading\r\n    }\r\n};\r\n\r\nconst GraphContainer = connect(mapStateToProps, {})(Graph);\r\n\r\nexport default GraphContainer;\r\n\r\n","import React from 'react';\r\nimport style from './Period.module.css';\r\n\r\nconst Period = (props) => {\r\n    let onPeriodChange = (event) => {\r\n        let period = event.target.value;\r\n        props.setNewPeriod(period);\r\n    };\r\n    return (\r\n        <div className={style.period}>\r\n            <select onChange={onPeriodChange} value={props.period}>\r\n                <option value={3}>3 дня</option>\r\n                <option value={7}>7 дней</option>\r\n                <option value={14}>14 дней</option>\r\n                <option value={30}>30 дней</option>\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Period;","import {connect} from \"react-redux\";\r\nimport {setNewPeriod, setRatesForPeriod} from \"../../../../Redux/course-reduser\";\r\nimport Period from \"./Period\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        period: state.course.period,\r\n        startPeriodDate: state.course.startPeriodDate,\r\n        dateNow: state.course.dateNow,\r\n        currency: state.course.currency,\r\n        base: state.course.base\r\n    }\r\n};\r\n\r\nconst PeriodContainer = connect(mapStateToProps,\r\n    {setNewPeriod, setRatesForPeriod})(Period);\r\n\r\nexport default PeriodContainer;","import React from 'react';\r\nimport style from './Statistic.module.css'\r\nimport CurrencyContainer from \"./Currency/CurrencyContainer\";\r\nimport BaseContainer from \"./Base/BaseContainer\";\r\nimport GraphContainer from \"./Graph/GraphContainer\";\r\nimport PeriodContainer from \"./Period/PeriodContainer\";\r\n\r\nconst Statistic = () => {\r\n    return (\r\n        <div className={style.statistic}>\r\n            <div className={style.currency}>\r\n                <div>Курс </div>\r\n                <CurrencyContainer/>\r\n                <div>за </div>\r\n                <BaseContainer/>\r\n            </div>\r\n            <div className={style.period}>\r\n                <div>период за</div>\r\n                <PeriodContainer/>\r\n            </div>\r\n            <div className={style.graph}>\r\n                <GraphContainer/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Statistic;","import React from 'react';\r\nimport style from './Converter.module.css'\r\n\r\nconst Converter = () => {\r\n    return (\r\n        <div className={style.converter}>\r\n            Converter\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Converter;","import React from 'react';\r\nimport style from './Base.module.css';\r\n\r\nconst Base = (props) => {\r\n\r\n    let onBaseChange = (event) => {\r\n        props.setNewBase(event.target.value);\r\n    };\r\n\r\n    let optionElements = props.baseName.map(\r\n        (item, index) => <option key={index} value={item[0]}>{`${item[0]} - ${item[1]}`}</option>\r\n    );\r\n\r\n    return (\r\n        <div className={style.courseMenuBase}>\r\n            <select onChange={onBaseChange} value={props.base}>\r\n                {optionElements}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Base;","import {setNewBase, setRates, setRatesBefore, toggleLoading} from \"../../../../../Redux/course-reduser\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {API} from \"../../../../../DAL/api\";\r\nimport Base from \"../../../../common/Base/Base\";\r\n\r\nclass CourseMenuBaseContainerAJAX extends React.Component {\r\n    // componentDidUpdate(prevProps) {\r\n    //\r\n    //     // получение параметров запроса из пропсов\r\n    //     let date = this.props.date;\r\n    //     let dateBefore = this.props.dateBefore;\r\n    //     let base = this.props.base;\r\n    //     if (prevProps.base !== base || prevProps.date !== date) {\r\n    //         console.log('BaseContainer DidUpdate');\r\n    //     this.props.toggleLoading(true);\r\n    //         let getRates = () => API.getByDate(date, base);\r\n    //         let getRatesBefore = () => API.getByDate(dateBefore, base);\r\n    //         Promise.all([getRates(), getRatesBefore()])\r\n    //             .then(results => {\r\n    //                 this.props.setRates(results[0].rates[date]);\r\n    //                 this.props.setRatesBefore(results[1].rates[dateBefore]);\r\n    //                 this.props.toggleLoading(false);\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return <Base\r\n            setNewBase={this.props.setNewBase}\r\n            course={this.props.course}\r\n            baseName={this.props.baseName}\r\n            base={this.props.base}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        baseName: state.course.baseName,\r\n        base: state.course.base,\r\n        date: state.course.date,\r\n        dateBefore: state.course.dateBefore,\r\n        isLoading: state.course.isLoading\r\n    }\r\n};\r\n\r\nconst CourseMenuBaseContainer = connect(mapStateToProps,\r\n    {setNewBase, setRates, setRatesBefore, toggleLoading})(CourseMenuBaseContainerAJAX);\r\n\r\nexport default CourseMenuBaseContainer;","import React from 'react';\r\nimport style from './CourseMenuDate.module.css';\r\n\r\nconst CourseMenuDate = (props) => {\r\n\r\n    let onLeftArrowClick = () => {\r\n        props.changeDate('minus');\r\n    };\r\n\r\n    let onRightArrowClick = () => {\r\n        if (props.date !== props.dateNow) {\r\n            props.changeDate('plus')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.courseMenuDate}>\r\n            <div className={style.arrow} onClick={onLeftArrowClick}>{'<'}</div>\r\n            <div className={style.date}>{props.date}</div>\r\n            <div className={style.arrow} onClick={onRightArrowClick}>{'>'}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CourseMenuDate;","import {\r\n    changeDate,\r\n    setDate,\r\n    setRates,\r\n    setRatesBefore,\r\n    toggleLoading\r\n} from \"../../../../../Redux/course-reduser\";\r\nimport {connect} from \"react-redux\";\r\nimport CourseMenuDate from \"./CourseMenuDate\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        date: state.course.date,\r\n        dateBefore: state.course.dateBefore,\r\n        dateNow: state.course.dateNow,\r\n        base: state.course.base,\r\n        isLoading: state.course.isLoading\r\n    }\r\n};\r\n\r\nconst CourseMenuDateContainer = connect(mapStateToProps,\r\n    {setRates, setRatesBefore, changeDate, setDate, toggleLoading})(CourseMenuDate);\r\n\r\nexport default CourseMenuDateContainer;","import React from 'react';\r\nimport CourseMenuBaseContainer from \"./CourseMenuBase/CourseMenuBaseContainer\";\r\nimport style from './CourseMenu.module.css';\r\nimport CourseMenuDateContainer from \"./CourseMenuDate/CourseMenuDateContainer\";\r\n\r\nconst CourseMenu = () => {\r\n    return (\r\n        <div className={style.courseMenu}>\r\n            <div className={style.courseMenuBase}>\r\n                <div>Курс по отношению к</div>\r\n                <CourseMenuBaseContainer/>\r\n            </div>\r\n            <div className={style.courseMenuDate}>\r\n                <div>Дата</div>\r\n                <CourseMenuDateContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CourseMenu;","import React from 'react';\r\nimport style from './CourseItem.module.css'\r\n\r\nconst CourseItem = (props) => {\r\n    let styleColor;\r\n    if (+props.change>0) {\r\n        styleColor = style.green\r\n    } else {styleColor = style.red}\r\n    return (\r\n        <div className={style.courseItems}>\r\n            <div className={style.nameOfCurrency}>\r\n                {props.nameOfCurrency}\r\n            </div>\r\n            <div className={style.designationOfCurrency}>\r\n                {props.designationOfCurrency}\r\n            </div>\r\n            <div className={style.rateOfCurrency}>\r\n                {props.rateOfCurrency}\r\n            </div>\r\n            <div className={`${style.change} ${styleColor}`}>\r\n                {props.change}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CourseItem;","import React from 'react';\r\nimport style from './CourseItems.module.css'\r\nimport CourseItem from \"./CourseItem/CourseItem\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst CourseItems = (props) => {\r\n    // if (!props.rates.length || !props.ratesBefore.length) {\r\n    //     return <Preloader/>\r\n    // }\r\n    let CourseItemElements = (props.rates.length !== 1) ?\r\n        props.rates.map(\r\n            (rate, index) => {\r\n                let nameOfCurrency = props.baseName.find(el => el[0] === rate.designationOfCurrency)[1];\r\n                //console.log(props.ratesBefore);\r\n\r\n                let change;\r\n                if (props.rates.length > 1 && props.ratesBefore.length > 1) {\r\n                    let rateOfCurrencyBefore = props.ratesBefore[index].rateOfCurrency;\r\n                    change = ((+rate.rateOfCurrency) - (+rateOfCurrencyBefore)).toFixed(6);\r\n                } else change = 'нет данных';\r\n\r\n                if (change > 0) {\r\n                    change = `+${change}`\r\n                };\r\n\r\n                return (\r\n                    <CourseItem\r\n                        key={index}\r\n                        designationOfCurrency={rate.designationOfCurrency}\r\n                        nameOfCurrency={nameOfCurrency}\r\n                        rateOfCurrency={rate.rateOfCurrency}\r\n                        change={change}\r\n                    />\r\n                )\r\n            }\r\n        ) : <div className={style.noData}>Нет данных</div>;\r\n\r\n    return (\r\n        <div className={style.courseItems}>\r\n            {CourseItemElements}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CourseItems;","import React from 'react';\r\n\r\nimport CourseItems from \"./CourseItems\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDate, setRates, setRatesBefore, toggleLoading} from \"../../../../Redux/course-reduser\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {API} from \"../../../../DAL/api\";\r\nimport {DATE as date} from \"../../../../DAL/date\";\r\n\r\nclass CourseItemsContainerAJAX extends React.Component {\r\n    componentDidMount() {\r\n        //this.props.toggleLoading(true);\r\n        // получение из запроса - даты, курсов и вычисление предыдущей даты\r\n        // передача даты, предыдущей даты и курсов в хранилище\r\n        console.log('ItemsContainer DidMount');\r\n        API.getLatest(this.props.base)\r\n            .then(data => {\r\n                let dateBefore = date.getDateNew('minus', data.date);\r\n                this.props.setRates(data.rates);\r\n                this.props.setDate(data.date);\r\n                //второй запрос на основании результатов первого (предыдущей даты)\r\n                //получение курсов предыдущей даты и передача их в хранилище\r\n                API.getByDate(dateBefore, this.props.base)\r\n                    .then(data => {\r\n                        this.props.setRatesBefore(data.rates[dateBefore]);\r\n                        this.props.toggleLoading(false);\r\n                    });\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // получение параметров запроса из пропсов\r\n\r\n        if (prevProps.base !== this.props.base || prevProps.date !== this.props.date) {\r\n            console.log('ItemsContainer DidUpdate');\r\n            this.props.toggleLoading(true);\r\n            let getRates = () => API.getByDate(this.props.date, this.props.base);\r\n            let getRatesBefore = () => API.getByDate(this.props.dateBefore, this.props.base);\r\n            Promise.all([getRates(), getRatesBefore()])\r\n                .then(results => {\r\n                    this.props.setRates(results[0].rates[this.props.date]);\r\n                    this.props.setRatesBefore(results[1].rates[this.props.dateBefore]);\r\n                    this.props.toggleLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isLoading ? <Preloader/> : null}\r\n                <CourseItems {...this.props}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        course: state.course,\r\n        date: state.date,\r\n        dateBefore: state.dateBefore,\r\n        base: state.course.base,\r\n        baseName: state.course.baseName,\r\n        rates: state.course.rates,\r\n        ratesBefore: state.course.ratesBefore,\r\n        isLoading: state.course.isLoading\r\n    }\r\n};\r\n\r\nlet CourseItemsContainer = connect(mapStateToProps,\r\n    {setRates, setDate, toggleLoading, setRatesBefore})(CourseItemsContainerAJAX);\r\n\r\nexport default CourseItemsContainer;","import React from 'react';\r\nimport style from './Course.module.css'\r\nimport CourseMenu from \"./CourseMenu/CourseMenu\";\r\nimport CourseItemsContainer from \"./CourseItems/CourseItemsContainer\";\r\n\r\nconst Course = () => {\r\n    return (\r\n        <div className={style.course}>\r\n            <CourseMenu/>\r\n            <div className={style.courseHeader}>\r\n                <div className={style.courseHeaderName}>\r\n                    Наименование валюты\r\n                </div>\r\n                <div className={style.courseHeaderCode}>\r\n                    Код\r\n                </div>\r\n                <div className={style.courseHeaderRate}>\r\n                    Курс\r\n                </div>\r\n                <div className={style.change}>\r\n                    Изменение\r\n                </div>\r\n\r\n            </div>\r\n            <CourseItemsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Course;","import React from 'react';\r\nimport style from './Main.module.css'\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Statistic from \"./Statistic/Statistic\";\r\nimport Converter from \"./Converter/Converter\";\r\nimport Course from \"./Course/Course\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main className={style.main}>\r\n            <Switch>\r\n                <Route\r\n                    exact path='/'\r\n                    render={() => <Course/>}/>\r\n\r\n                <Route\r\n                    path='/exchange-rates'\r\n                    render={() => <Course/>}/>\r\n\r\n                <Route\r\n                    path='/statistic'\r\n                    render={() => <Statistic/>}/>\r\n\r\n                <Route\r\n                    path='/converter'\r\n                    render={() => <Converter/>}/>\r\n\r\n            </Switch>\r\n\r\n\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Main from \"./Components/Main/Main\";\n\nfunction App() {\n  return (\n        <div className=\"app-wrapper\">\n            <Header/>\n            <Main/>\n        </div>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport courseReduser from \"./course-reduser\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nlet redusers = combineReducers({\r\n    course: courseReduser\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./Redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}